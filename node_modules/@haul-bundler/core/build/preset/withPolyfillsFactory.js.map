{"version":3,"sources":["../../src/preset/withPolyfillsFactory.ts"],"names":["withPolyfillsFactory","polyfills","withPolyfills","entry","additionalSetupFiles","initializeCoreLocation","setupFiles","entryFiles","Array","isArray","Error"],"mappings":";;;;;;;AAKe,SAASA,oBAAT,CAA8BC,SAA9B,EAAmD;AAChE,SAAO,SAASC,aAAT,CACLC,KADK,EAEL;AACEC,IAAAA,oBAAoB,GAAG,EADzB;AAEEC,IAAAA,sBAAsB,GAAG;AAF3B,MAGa,EALR,EAM2C;AAChD,UAAMC,UAAU,GAAG,CAAC,GAAGL,SAAJ,EAAeI,sBAAf,CAAnB;;AAEA,QAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAO;AACLG,QAAAA,UAAU,EAAE,CAAC,GAAGA,UAAJ,EAAgB,GAAGF,oBAAnB,CADP;AAELG,QAAAA,UAAU,EAAE,CAAC,GAAGD,UAAJ,EAAgBH,KAAhB;AAFP,OAAP;AAID,KALD,MAKO,IAAIK,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAJ,EAA0B;AAC/B,aAAO;AACLG,QAAAA,UAAU,EAAE,CAAC,GAAGA,UAAJ,EAAgB,GAAGF,oBAAnB,CADP;AAELG,QAAAA,UAAU,EAAE,CAAC,GAAGD,UAAJ,EAAgB,GAAGH,KAAnB;AAFP,OAAP;AAID,KALM,MAKA;AACL,YAAM,IAAIO,KAAJ,CAAW,GAAE,OAAOP,KAAM,8BAA1B,CAAN;AACD;AACF,GAtBD;AAuBD","sourcesContent":["type Options = {\n  initializeCoreLocation?: string;\n  additionalSetupFiles?: string[];\n};\n\nexport default function withPolyfillsFactory(polyfills: string[]) {\n  return function withPolyfills(\n    entry: string | string[],\n    {\n      additionalSetupFiles = [],\n      initializeCoreLocation = 'react-native/Libraries/Core/InitializeCore.js',\n    }: Options = {}\n  ): { entryFiles: string[]; setupFiles: string[] } {\n    const setupFiles = [...polyfills, initializeCoreLocation];\n\n    if (typeof entry === 'string') {\n      return {\n        setupFiles: [...setupFiles, ...additionalSetupFiles],\n        entryFiles: [...setupFiles, entry],\n      };\n    } else if (Array.isArray(entry)) {\n      return {\n        setupFiles: [...setupFiles, ...additionalSetupFiles],\n        entryFiles: [...setupFiles, ...entry],\n      };\n    } else {\n      throw new Error(`${typeof entry} is not supported as a entry`);\n    }\n  };\n}\n"],"file":"withPolyfillsFactory.js"}