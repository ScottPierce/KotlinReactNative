{"version":3,"sources":["../../../src/preset/utils/applyMultiBundleTweaks.ts"],"names":["getBundleFilename","env","templatesConfig","bundleConfig","filename","bundleTarget","platform","bundleName","name","type","dll","app","mode","dev","applyMultiBundleTweaks","webpackConfig","normalizedBundleConfigs","bundleFilename","bundleOutputDirectory","output","path","bundleOutput","extname","dirname","isAbsolute","join","root","targetBundleOutput","relative","library","libraryTarget","plugins","push","webpack","DllPlugin","dependsOn","forEach","dllBundleName","dllNormalizedBundleConfig","Error","DllReferencePlugin","context","manifest","external","manifestPath","sourceType"],"mappings":"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","sourcesContent":["import path from 'path';\nimport webpack from 'webpack';\nimport {\n  EnvOptions,\n  NormalizedBundleConfig,\n  NormalizedTemplatesConfig,\n} from '../../config/types';\nimport compileTemplate from './compileTemplate';\n\nexport function getBundleFilename(\n  env: EnvOptions,\n  templatesConfig: NormalizedTemplatesConfig,\n  bundleConfig: NormalizedBundleConfig\n) {\n  return compileTemplate(\n    templatesConfig.filename[\n      env.bundleTarget === 'server' ? '__server__' : bundleConfig.platform\n    ],\n    {\n      bundleName: bundleConfig.name,\n      platform: bundleConfig.platform,\n      type: bundleConfig.dll ? 'dll' : bundleConfig.app ? 'app' : 'default',\n      mode: bundleConfig.dev ? 'dev' : 'prod',\n    }\n  );\n}\n\nexport default function applyMultiBundleTweaks(\n  env: EnvOptions,\n  templatesConfig: NormalizedTemplatesConfig,\n  bundleConfig: NormalizedBundleConfig,\n  webpackConfig: webpack.Configuration,\n  normalizedBundleConfigs: { [bundleName: string]: NormalizedBundleConfig }\n) {\n  let bundleFilename = getBundleFilename(env, templatesConfig, bundleConfig);\n\n  let bundleOutputDirectory = webpackConfig.output!.path!;\n  if (env.bundleOutput) {\n    // `bundleOutput` should be a directory, but for backward-compatibility,\n    // we also handle the case with a filename.\n    bundleOutputDirectory =\n      path.extname(env.bundleOutput) === ''\n        ? env.bundleOutput\n        : path.dirname(env.bundleOutput);\n    bundleOutputDirectory = path.isAbsolute(bundleOutputDirectory)\n      ? bundleOutputDirectory\n      : path.join(bundleConfig.root, bundleOutputDirectory);\n\n    const targetBundleOutput = path.join(bundleOutputDirectory, bundleFilename);\n    webpackConfig.output!.filename = path.relative(\n      webpackConfig.output!.path!,\n      targetBundleOutput\n    );\n  } else {\n    webpackConfig.output!.filename = bundleFilename;\n  }\n\n  if (bundleConfig.dll) {\n    webpackConfig.output!.library = bundleConfig.name;\n    webpackConfig.output!.libraryTarget = 'this';\n    webpackConfig.plugins!.push(\n      new webpack.DllPlugin({\n        name: bundleConfig.name,\n        path: path.join(\n          bundleOutputDirectory,\n          `${bundleConfig.name}.manifest.json`\n        ),\n      })\n    );\n  } else if (bundleConfig.app) {\n    webpackConfig.output!.library = bundleConfig.name;\n    webpackConfig.output!.libraryTarget = 'this';\n  }\n\n  bundleConfig.dependsOn.forEach((dllBundleName: string) => {\n    const dllNormalizedBundleConfig = normalizedBundleConfigs[dllBundleName];\n    if (!dllNormalizedBundleConfig) {\n      throw new Error(\n        `Cannot find bundle config for DLL '${dllBundleName}' - make sure it's listed in config before any other bundle depends on it.`\n      );\n    }\n\n    webpackConfig.plugins!.push(\n      new webpack.DllReferencePlugin({\n        context: bundleConfig.root,\n        manifest: dllNormalizedBundleConfig.external\n          ? dllNormalizedBundleConfig.external.manifestPath!\n          : path.join(bundleOutputDirectory, `${dllBundleName}.manifest.json`),\n        sourceType: 'this',\n      })\n    );\n  });\n}\n"],"file":"applyMultiBundleTweaks.js"}