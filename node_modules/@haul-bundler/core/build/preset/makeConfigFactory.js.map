{"version":3,"sources":["../../src/preset/makeConfigFactory.ts"],"names":["defaultTemplateConfig","filename","ios","android","__server__","defaultFeaturesConfig","multiBundle","makeConfigFactory","getDefaultConfig","makeConfig","projectConfig","runtime","env","normalizedServerConfig","port","DEFAULT_PORT","host","normalizedTemplatesConfig","templates","featuresConfig","features","platforms","normalizedBundleConfigs","transforms","webpackConfigs","Object","keys","bundles","forEach","bundleName","bundleConfigBuilder","bundleConfig","looseMode","Array","isArray","some","element","path","isAbsolute","Error","test","dev","root","normalizedBundleConfig","name","entry","entryFiles","setupFiles","type","bundleTarget","bundleType","platform","assetsDest","minify","Boolean","minifyOptions","undefined","sourceMap","app","dll","dependsOn","external","bundlePath","copyBundle","assetsPath","join","dirname","manifestPath","providesModuleNodeModules","hasteOptions","maxWorkers","Math","max","isCi","min","length","includes","map","transform","bundleIdsMap","reduce","acc","index","webpackConfig","server","output","sourcemapOutput","sourceMapFilename","relative","plugins","concat","filter","BasicBundleWebpackPlugin","preloadBundles","RamBundlePlugin","indexRamBundle","singleBundleMode","bundleMode","bundleId","webpack","DefinePlugin","JSON","stringify","push","LooseModeWebpackPlugin","InitCoreDllPlugin","config"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport webpack from 'webpack';\nimport path from 'path';\nimport { cpus } from 'os';\nimport isCi from 'is-ci';\nimport {\n  Runtime,\n  EnvOptions,\n  BundleConfig,\n  BundleConfigBuilder,\n  ProjectConfig,\n  NormalizedProjectConfig,\n  NormalizedProjectConfigBuilder,\n  DEFAULT_PORT,\n  NormalizedBundleConfig,\n} from '../';\nimport getSourceMapPlugin from './utils/getSourceMapPlugin';\nimport {\n  NormalizedFeaturesConfig,\n  NormalizedServerConfig,\n  NormalizedTemplatesConfig,\n} from '../config/types';\nimport applySingleBundleTweaks from './utils/applySingleBundleTweaks';\nimport applyMultiBundleTweaks from './utils/applyMultiBundleTweaks';\nimport LooseModeWebpackPlugin from '../webpack/plugins/LooseModeWebpackPlugin';\nimport InitCoreDllPlugin from '../webpack/plugins/InitCoreDllPlugin';\nimport RamBundlePlugin from '../webpack/plugins/RamBundleWebpackPlugin';\nimport BasicBundleWebpackPlugin from '../webpack/plugins/BasicBundleWebpackPlugin';\n\ntype GetDefaultConfig = (\n  runtime: Runtime,\n  env: EnvOptions,\n  bundleName: string,\n  normalizedProjectConfig: NormalizedProjectConfig\n) => webpack.Configuration;\n\nconst defaultTemplateConfig: NormalizedTemplatesConfig = {\n  filename: {\n    ios: '[bundleName].jsbundle',\n    android: '[bundleName].[platform].bundle',\n    __server__: '[bundleName].[platform].bundle',\n  },\n};\n\nconst defaultFeaturesConfig: NormalizedFeaturesConfig = {\n  multiBundle: 1,\n};\n\nexport default function makeConfigFactory(getDefaultConfig: GetDefaultConfig) {\n  return function makeConfig(\n    projectConfig: ProjectConfig\n  ): NormalizedProjectConfigBuilder {\n    return (runtime: Runtime, env: EnvOptions) => {\n      const normalizedServerConfig = {\n        port: env.port || get(projectConfig, 'server.port', DEFAULT_PORT),\n        host: get(projectConfig, 'server.host', 'localhost'),\n      } as NormalizedServerConfig;\n\n      const normalizedTemplatesConfig = merge(\n        {},\n        defaultTemplateConfig,\n        projectConfig.templates\n      ) as NormalizedTemplatesConfig;\n\n      const featuresConfig = merge(\n        {},\n        defaultFeaturesConfig,\n        projectConfig.features\n      ) as NormalizedFeaturesConfig;\n\n      const platforms = projectConfig.platforms || ['ios', 'android'];\n\n      const normalizedBundleConfigs: {\n        [bundleName: string]: NormalizedBundleConfig;\n      } = {};\n      const transforms: {\n        [bundleName: string]: BundleConfig['transform'];\n      } = {};\n      const webpackConfigs: {\n        [bundleName: string]: webpack.Configuration;\n      } = {};\n\n      Object.keys(projectConfig.bundles).forEach(bundleName => {\n        const bundleConfigBuilder: BundleConfig | BundleConfigBuilder =\n          projectConfig.bundles[bundleName];\n        const bundleConfig: BundleConfig =\n          typeof bundleConfigBuilder === 'function'\n            ? bundleConfigBuilder(env, runtime)\n            : bundleConfigBuilder;\n\n        let looseMode: NormalizedBundleConfig['looseMode'] = () => false;\n        if (bundleConfig.looseMode === true) {\n          looseMode = () => true;\n        } else if (Array.isArray(bundleConfig.looseMode)) {\n          looseMode = (filename: string) => {\n            return (bundleConfig.looseMode as Array<string | RegExp>).some(\n              element => {\n                if (typeof element === 'string') {\n                  if (!path.isAbsolute(element)) {\n                    throw new Error(\n                      `${element} in 'looseMode' property must be an absolute path or regex`\n                    );\n                  }\n                  return element === filename;\n                }\n\n                return element.test(filename);\n              }\n            );\n          };\n        } else if (typeof bundleConfig.looseMode === 'function') {\n          looseMode = bundleConfig.looseMode;\n        }\n\n        // TODO: use minifyOptions to configure terser for basic bundle\n        const dev = bundleConfig.dev || env.dev;\n        const root = bundleConfig.root || env.root;\n        const normalizedBundleConfig: NormalizedBundleConfig = {\n          name: bundleConfig.name || bundleName,\n          entry:\n            typeof bundleConfig.entry === 'string'\n              ? { entryFiles: [bundleConfig.entry], setupFiles: [] }\n              : Array.isArray(bundleConfig.entry)\n              ? {\n                  entryFiles: bundleConfig.entry,\n                  setupFiles: [],\n                }\n              : bundleConfig.entry || { setupFiles: [], entryFiles: [] },\n          type:\n            // Force basic-bundle type when serving from packager server.\n            env.bundleTarget === 'server'\n              ? 'basic-bundle'\n              : bundleConfig.type || env.bundleType || 'basic-bundle',\n          platform: bundleConfig.platform || env.platform,\n          root,\n          dev,\n          assetsDest: bundleConfig.assetsDest || env.assetsDest || '',\n          minify: bundleConfig.minify || Boolean(env.minify),\n          minifyOptions: bundleConfig.minifyOptions || undefined,\n          sourceMap:\n            typeof bundleConfig.sourceMap !== 'undefined'\n              ? bundleConfig.sourceMap\n              : true,\n          looseMode,\n          app: Boolean(bundleConfig.app),\n          dll: Boolean(bundleConfig.dll),\n          dependsOn: bundleConfig.dependsOn || [],\n          external: bundleConfig.bundlePath\n            ? {\n                copyBundle: Boolean(bundleConfig.copyBundle),\n                bundlePath: bundleConfig.bundlePath,\n                assetsPath: bundleConfig.assetsPath\n                  ? path.isAbsolute(bundleConfig.assetsPath)\n                    ? bundleConfig.assetsPath\n                    : path.join(\n                        path.dirname(bundleConfig.bundlePath),\n                        bundleConfig.assetsPath\n                      )\n                  : path.dirname(bundleConfig.bundlePath),\n                manifestPath: bundleConfig.manifestPath,\n              }\n            : false,\n          providesModuleNodeModules: bundleConfig.providesModuleNodeModules || [\n            'react-native',\n          ],\n          hasteOptions: bundleConfig.hasteOptions || {},\n          maxWorkers:\n            bundleConfig.maxWorkers !== undefined\n              ? Math.max(1, bundleConfig.maxWorkers)\n              : env.maxWorkers !== undefined\n              ? Math.max(1, env.maxWorkers)\n              : Math.max(\n                  isCi ? Math.min(cpus().length - 1, 7) : cpus().length - 1,\n                  1\n                ),\n        };\n        // Make sure user supplied manifestPath if the bundle is DLL. Otherwise, we wouldn't\n        // have any info what the bundle contains.\n        if (\n          normalizedBundleConfig.dll &&\n          normalizedBundleConfig.external &&\n          !normalizedBundleConfig.external.manifestPath\n        ) {\n          throw new Error(\n            `Missing 'manifestPath' for external DLL '${normalizedBundleConfig.name}'`\n          );\n        }\n\n        // Make sure the target platform is supported. Do not run this check when target is set\n        // to server, since the initial configuration loading is done with `platform` set\n        // to \"\".\n        if (\n          !platforms.includes(normalizedBundleConfig.platform) &&\n          env.bundleTarget !== 'server'\n        ) {\n          throw new Error(\n            `Platform \"${\n              normalizedBundleConfig.platform\n            }\" is not supported - only: ${platforms\n              .map(platform => `\"${platform}\"`)\n              .join(', ')} are available.`\n          );\n        }\n\n        normalizedBundleConfigs[\n          normalizedBundleConfig.name\n        ] = normalizedBundleConfig;\n        transforms[normalizedBundleConfig.name] = bundleConfig.transform;\n      });\n\n      const bundleIdsMap: { [bundleName: string]: number } = Object.keys(\n        normalizedBundleConfigs\n      ).reduce((acc, bundleName, index) => {\n        return {\n          ...acc,\n          [bundleName]: index,\n        };\n      }, {});\n\n      Object.keys(normalizedBundleConfigs).forEach(bundleName => {\n        const normalizedBundleConfig = normalizedBundleConfigs[bundleName];\n\n        let webpackConfig = getDefaultConfig(\n          runtime,\n          env,\n          normalizedBundleConfig.name,\n          {\n            server: normalizedServerConfig,\n            platforms,\n            templates: normalizedTemplatesConfig,\n            bundles: {\n              // Pass only it's own normalized bundle config\n              [normalizedBundleConfig.name]: normalizedBundleConfig,\n            },\n            webpackConfigs: {},\n          }\n        );\n\n        if (env.assetsDest) {\n          webpackConfig.output!.path = path.isAbsolute(env.assetsDest)\n            ? env.assetsDest\n            : path.join(normalizedBundleConfig.root, env.assetsDest);\n        }\n\n        if (env.sourcemapOutput) {\n          webpackConfig.output!.sourceMapFilename = path.isAbsolute(\n            env.sourcemapOutput\n          )\n            ? path.relative(webpackConfig.output!.path!, env.sourcemapOutput)\n            : path.relative(\n                webpackConfig.output!.path!,\n                path.join(normalizedBundleConfig.root, env.sourcemapOutput)\n              );\n        } else {\n          webpackConfig.output!.sourceMapFilename = '[file].map';\n        }\n\n        webpackConfig.plugins = (webpackConfig.plugins || [])\n          .concat(\n            getSourceMapPlugin(\n              normalizedBundleConfig,\n              normalizedServerConfig,\n              webpackConfig.output!.sourceMapFilename\n            ) as webpack.Plugin\n          )\n          .filter(Boolean);\n\n        webpackConfig.plugins = (webpackConfig.plugins || []).concat(\n          normalizedBundleConfig.type === 'basic-bundle'\n            ? new BasicBundleWebpackPlugin({\n                preloadBundles:\n                  featuresConfig.multiBundle === 1\n                    ? normalizedBundleConfig.dependsOn\n                    : [],\n              })\n            : new RamBundlePlugin({\n                minify: normalizedBundleConfig.minify,\n                minifyOptions: normalizedBundleConfig.minifyOptions,\n                sourceMap: Boolean(normalizedBundleConfig.sourceMap),\n                indexRamBundle:\n                  normalizedBundleConfig.type === 'indexed-ram-bundle',\n                singleBundleMode: env.bundleMode === 'single-bundle',\n                preloadBundles:\n                  featuresConfig.multiBundle === 1\n                    ? normalizedBundleConfig.dependsOn\n                    : [],\n                maxWorkers: env.maxWorkers || normalizedBundleConfig.maxWorkers,\n                bundleId:\n                  featuresConfig.multiBundle === 1\n                    ? bundleName\n                    : bundleIdsMap[bundleName],\n                bundleName,\n              }),\n          new webpack.DefinePlugin({\n            'process.env.HAUL_BUNDLES': JSON.stringify(bundleIdsMap),\n          })\n        );\n\n        webpackConfig.plugins.push(\n          new LooseModeWebpackPlugin(normalizedBundleConfig.looseMode)\n        );\n\n        if (\n          normalizedBundleConfig.dll &&\n          normalizedBundleConfig.entry.setupFiles.length > 0 &&\n          featuresConfig.multiBundle >= 2\n        ) {\n          webpackConfig.plugins.push(\n            new InitCoreDllPlugin({\n              setupFiles: normalizedBundleConfig.entry.setupFiles,\n            })\n          );\n        }\n\n        if (env.bundleMode === 'single-bundle') {\n          applySingleBundleTweaks(\n            env,\n            normalizedTemplatesConfig,\n            normalizedBundleConfig,\n            webpackConfig\n          );\n        } else if (env.bundleMode === 'multi-bundle') {\n          applyMultiBundleTweaks(\n            env,\n            normalizedTemplatesConfig,\n            normalizedBundleConfig,\n            webpackConfig,\n            normalizedBundleConfigs\n          );\n        }\n\n        const transform = transforms[bundleName];\n        if (transform) {\n          webpackConfig =\n            transform({\n              bundleName: normalizedBundleConfig.name,\n              config: webpackConfig,\n              env,\n              runtime,\n            }) || webpackConfig;\n        }\n\n        webpackConfigs[normalizedBundleConfig.name] = webpackConfig;\n      });\n\n      return {\n        server: normalizedServerConfig,\n        platforms,\n        templates: normalizedTemplatesConfig,\n        bundles: normalizedBundleConfigs,\n        webpackConfigs,\n      };\n    };\n  };\n}\n"],"file":"makeConfigFactory.js"}