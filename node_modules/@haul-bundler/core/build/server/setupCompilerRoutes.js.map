{"version":3,"sources":["../../src/server/setupCompilerRoutes.ts"],"names":["setupCompilerRoutes","runtime","server","compiler","port","bundleNames","platforms","cliBundleOptions","hasRunAdbReverse","hasWarnedDelta","bundleRegex","bundleOptions","ios","android","route","method","path","options","validate","query","Joi","object","platform","string","minify","boolean","dev","unknown","handler","request","h","test","Promise","resolve","filename","emit","Compiler","Events","REQUEST_FILE","callback","result","makeResponseFromCompilerResults","name","bundleName","type","bundleType","url","href","message","logger","error","Boom","badImplementation","includes","map","join","badRequest","info","warn","bundleOptionsFromQuery","getBundleOptionsFromQuery","isUserChangedOptions","isUserChangedAlreadySetBundleOptions","warnMsg","response","code","areBundleOptionsSet","alreadySet","bundleOptionsForCompiler","REQUEST_BUNDLE","errors","file","notFound","toString","Buffer","from","data","mimeType","length","header","filter","undefined"],"mappings":"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","sourcesContent":["import Boom from '@hapi/boom';\nimport Hapi from '@hapi/hapi';\nimport Joi from '@hapi/joi';\n// @ts-ignore\nimport Compiler from '@haul-bundler/core-legacy/build/compiler/Compiler';\nimport runAdbReverse from '../utils/runAdbReverse';\nimport createDeltaBundle from './createDeltaBundle';\nimport Runtime from '../runtime/Runtime';\nimport getBundleDataFromURL from '../utils/getBundleDataFromURL';\n\ntype Platform = string;\ntype BundleOptions = { dev?: boolean; minify?: boolean; alreadySet?: boolean };\ntype PlatformsBundleOptions = {\n  [platform in Platform]: BundleOptions;\n};\n\nexport default function setupCompilerRoutes(\n  runtime: Runtime,\n  server: Hapi.Server,\n  compiler: any,\n  {\n    port,\n    bundleNames,\n    platforms,\n    cliBundleOptions,\n  }: {\n    port: number;\n    bundleNames: string[];\n    platforms: string[];\n    cliBundleOptions: BundleOptions;\n  }\n) {\n  let hasRunAdbReverse = false;\n  let hasWarnedDelta = false;\n  const bundleRegex = /^([^.]+)(\\.[^.]+)?\\.(bundle|delta)$/;\n  let bundleOptions: PlatformsBundleOptions = {\n    ios: { ...cliBundleOptions },\n    android: { ...cliBundleOptions },\n  };\n\n  server.route({\n    method: 'GET',\n    path: '/{any*}',\n    options: {\n      validate: {\n        query: Joi.object({\n          platform: Joi.string(),\n          minify: Joi.boolean(),\n          dev: Joi.boolean(),\n        }).unknown(true) as any,\n      },\n    },\n    handler: async (request, h) => {\n      if (!bundleRegex.test(request.path)) {\n        return new Promise(resolve => {\n          const filename = request.path;\n          compiler.emit(Compiler.Events.REQUEST_FILE, {\n            filename,\n            callback: (result: {\n              file?: any;\n              errors: string[];\n              mimeType: string;\n            }) => {\n              resolve(makeResponseFromCompilerResults(h, { filename }, result));\n            },\n          });\n        });\n      } else {\n        const {\n          name: bundleName,\n          platform,\n          type: bundleType,\n        } = getBundleDataFromURL(request.url.href);\n        if (!platform) {\n          const message = `Cannot detect platform parameter in URL: ${request.path}`;\n          runtime.logger.error(message);\n          return Boom.badImplementation(message);\n        }\n\n        if (!platforms.includes(platform)) {\n          const message = `Platform \"${platform}\" is not supported - only: ${platforms\n            .map(platform => `\"${platform}\"`)\n            .join(', ')} are available.`;\n          runtime.logger.error(message);\n          return Boom.badRequest(message);\n        }\n\n        runtime.logger.info(\n          `Compiling ${\n            bundleType === 'bundle' ? bundleType : `${bundleType} bundle`\n          } \"${bundleName}\" for platform ${platform}`\n        );\n\n        if (!hasRunAdbReverse && platform === 'android') {\n          hasRunAdbReverse = true;\n          await runAdbReverse(runtime, port);\n        }\n\n        if (bundleType === 'delta' && !hasWarnedDelta) {\n          runtime.logger.warn(\n            'Your app requested a delta bundle, this has minimal support in Haul'\n          );\n          hasWarnedDelta = true;\n        }\n\n        const bundleOptionsFromQuery = getBundleOptionsFromQuery(request.query);\n        const isUserChangedOptions = isUserChangedAlreadySetBundleOptions(\n          bundleOptions[platform],\n          bundleOptionsFromQuery\n        );\n\n        if (isUserChangedOptions) {\n          const warnMsg =\n            'Changing query params after the bundle has been created is not supported. To see the changes you need to restart the Haul server.';\n          runtime.logger.warn(warnMsg);\n          return h.response(warnMsg).code(501);\n        }\n\n        if (areBundleOptionsSet(bundleOptionsFromQuery)) {\n          bundleOptions[platform] = {\n            ...bundleOptions[platform],\n            ...bundleOptionsFromQuery,\n            alreadySet: true,\n          };\n        }\n\n        const bundleOptionsForCompiler = {\n          minify: bundleOptions[platform].minify,\n          dev: bundleOptions[platform].dev,\n        };\n\n        return new Promise(resolve => {\n          const filename = `${bundleName}.${platform}.bundle`;\n          compiler.emit(Compiler.Events.REQUEST_BUNDLE, {\n            bundleOptions: bundleOptionsForCompiler,\n            filename,\n            platform,\n            callback: (result: {\n              file?: any;\n              errors: string[];\n              mimeType: string;\n            }) => {\n              resolve(\n                makeResponseFromCompilerResults(\n                  h,\n                  { filename, bundleType, bundleNames },\n                  result\n                )\n              );\n            },\n          });\n        });\n      }\n    },\n  });\n}\n\nfunction makeResponseFromCompilerResults(\n  h: Hapi.ResponseToolkit,\n  {\n    filename,\n    bundleType,\n    bundleNames,\n  }: { filename: string; bundleType?: string; bundleNames?: string[] },\n  result: {\n    file?: any;\n    errors: string[];\n    mimeType: string;\n  }\n) {\n  if (result.errors) {\n    return h.response({ errors: result.errors }).code(500);\n  } else if (!result.file) {\n    return Boom.notFound(`File ${filename} not found`);\n  }\n\n  let file;\n  if (bundleType === 'delta') {\n    // We have a bundle, but RN is expecting a delta bundle.\n    // Convert full bundle into the simplest delta possible.\n    // This will load slower in RN, but it won't error, which is\n    // nice for automated use-cases where changing the dev setting\n    // is not possible.\n    file = createDeltaBundle(result.file.toString());\n  } else {\n    file =\n      result.file.type === 'Buffer'\n        ? Buffer.from(result.file.data)\n        : result.file;\n  }\n\n  const response = h\n    .response(file)\n    .type(result.mimeType)\n    .code(200);\n\n  // Add bundle names when running in multi-bundle mode.\n  if (bundleNames && bundleNames.length > 1) {\n    response.header(\n      'X-multi-bundle',\n      bundleNames.filter(name => !filename.includes(name)).join(',')\n    );\n  }\n\n  return response;\n}\n\nfunction areBundleOptionsSet(bundleOptions: BundleOptions) {\n  return bundleOptions.dev !== undefined || bundleOptions.minify !== undefined;\n}\n\nfunction getBundleOptionsFromQuery(query: { minify?: boolean; dev?: boolean }) {\n  let bundleOptions: BundleOptions = {};\n\n  if (query.minify === true) {\n    bundleOptions.minify = true;\n  } else if (query.minify === false) {\n    bundleOptions.minify = false;\n  }\n\n  if (query.dev === true) {\n    bundleOptions.dev = true;\n  } else if (query.dev === false) {\n    bundleOptions.dev = false;\n  }\n\n  return bundleOptions;\n}\n\nfunction isUserChangedAlreadySetBundleOptions(\n  bundleOptions: BundleOptions,\n  bundleOptionsFromQuery: BundleOptions\n) {\n  if (areBundleOptionsSet(bundleOptionsFromQuery)) {\n    if (bundleOptions.alreadySet) {\n      return (\n        bundleOptions.dev !== bundleOptionsFromQuery.dev ||\n        bundleOptionsFromQuery.minify !== bundleOptions.minify\n      );\n    }\n  }\n  return false;\n}\n"],"file":"setupCompilerRoutes.js"}