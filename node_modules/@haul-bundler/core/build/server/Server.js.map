{"version":3,"sources":["../../src/server/Server.ts"],"names":["Server","constructor","runtime","configPath","options","http","createServer","noInteractive","ui","NonInteractiveUI","InteractiveUI","terminal","createCompiler","compiler","Compiler","configOptions","bundleTarget","bundleMode","bundleNames","length","logger","on","Events","BUILD_START","platform","updateCompilationProgress","running","value","BUILD_PROGRESS","progress","BUILD_FAILED","message","addLogItem","enhanceWithLevel","Logger","Level","Error","BUILD_FINISHED","errors","forEach","error","attachProcessEventsListeners","createListener","exitCode","exit","name","process","dispose","resetConsole","disposeLoggerProxy","terminate","complete","listen","host","port","proxy","level","args","hijackConsole","server","Hapi","router","stripTrailingSlash","webSocketServer","ws","listener","webSocketProxy","debuggerProxy","WebSocketDebuggerProxy","register","require","events","request","response","statusCode","logServerEvent","isDebuggerConnected","platforms","cliBundleOptions","minify","dev","start","done","eager","emit","REQUEST_BUNDLE","filename","callback","log","console","Info","event","logColor","method","toUpperCase","path","toString","tags","join","build"],"mappings":"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","sourcesContent":["import { EnvOptions } from '../config/types';\nimport { Assign } from 'utility-types';\nimport Hapi, { ResponseObject } from '@hapi/hapi';\nimport http from 'http';\nimport ws from 'ws';\n// @ts-ignore\nimport Compiler from '@haul-bundler/core-legacy/build/compiler/Compiler';\nimport { terminal } from 'terminal-kit';\nimport Runtime from '../runtime/Runtime';\nimport setupDevtoolRoutes from './setupDevtoolRoutes';\nimport setupCompilerRoutes from './setupCompilerRoutes';\nimport setupLiveReload from './setupLiveReload';\nimport setupSymbolication from './setupSymbolication';\nimport createWebsocketProxy from './websocketProxy';\nimport WebSocketDebuggerProxy from './WebSocketDebuggerProxy';\nimport InteractiveUI from './InteractiveUI';\nimport NonInteractiveUI from './NonInteractiveUI';\nimport UserInterface from './UI';\nimport Logger from '../runtime/Logger';\nimport { container, color, modifier, pad, AnsiColor } from 'ansi-fragments';\n\ntype ServerEnvOptions = Assign<\n  Pick<EnvOptions, 'dev' | 'minify' | 'assetsDest' | 'root'>,\n  {\n    noInteractive: boolean;\n    eager: string[];\n    bundleNames: string[];\n    platforms: string[];\n    skipHostCheck: boolean;\n  }\n>;\n\nexport default class Server {\n  compiler: any;\n  server: Hapi.Server | undefined;\n  httpServer: http.Server = http.createServer();\n  resetConsole = () => {};\n  disposeLoggerProxy = () => {};\n  ui: UserInterface;\n\n  constructor(\n    private runtime: Runtime,\n    private configPath: string,\n    private options: ServerEnvOptions\n  ) {\n    if (this.options.noInteractive) {\n      this.ui = new NonInteractiveUI(this.runtime);\n    } else {\n      this.ui = new InteractiveUI(terminal);\n    }\n  }\n\n  createCompiler() {\n    const compiler = new Compiler(\n      {\n        configPath: this.configPath,\n        configOptions: {\n          ...this.options,\n          bundleTarget: 'server',\n          bundleMode:\n            this.options.bundleNames.length > 1\n              ? 'multi-bundle'\n              : 'single-bundle',\n        },\n      },\n      this.runtime.logger\n    );\n\n    compiler.on(\n      Compiler.Events.BUILD_START,\n      ({ platform }: { platform: string }) => {\n        this.ui.updateCompilationProgress(platform, {\n          running: true,\n          value: 0,\n        });\n      }\n    );\n\n    compiler.on(\n      Compiler.Events.BUILD_PROGRESS,\n      ({ progress, platform }: { platform: string; progress: number }) => {\n        this.ui.updateCompilationProgress(platform, {\n          running: true,\n          value: progress,\n        });\n      }\n    );\n\n    compiler.on(\n      Compiler.Events.BUILD_FAILED,\n      ({ platform, message }: { platform: string; message: string }) => {\n        this.ui.updateCompilationProgress(platform, {\n          running: false,\n          value: 0,\n        });\n        this.ui.addLogItem(\n          this.runtime.logger.enhanceWithLevel(Logger.Level.Error, message)\n        );\n      }\n    );\n\n    compiler.on(\n      Compiler.Events.BUILD_FINISHED,\n      ({ platform, errors }: { platform: string; errors: string[] }) => {\n        this.ui.updateCompilationProgress(platform, {\n          running: false,\n          value: 1,\n        });\n        errors.forEach(error => {\n          this.ui.addLogItem(\n            this.runtime.logger.enhanceWithLevel(Logger.Level.Error, error)\n          );\n        });\n      }\n    );\n\n    return compiler;\n  }\n\n  attachProcessEventsListeners() {\n    const createListener = (exitCode: number) => (error: any) => {\n      this.exit(exitCode, error);\n    };\n\n    // Manually call disposal logic if pressed key is CTRL + C.\n    // 'SIGINT' signal won't be emitted on CTRL + C, because stdin is in raw mode.\n    terminal.on('key', (name: string) => {\n      if (name === 'CTRL_C') {\n        createListener(0)(null);\n      }\n    });\n    process.on('uncaughtException', createListener(1));\n    process.on('unhandledRejection', createListener(1));\n    process.on('SIGINT', createListener(0));\n    process.on('SIGTERM', createListener(2));\n  }\n\n  exit(exitCode: number, error: any | undefined) {\n    this.ui.dispose(exitCode, false);\n    this.resetConsole();\n    this.disposeLoggerProxy();\n    this.compiler.terminate();\n    if (error) {\n      this.runtime.logger.error(error);\n    }\n    this.runtime.complete(exitCode);\n  }\n\n  async listen(host: string, port: number) {\n    // Proxy logs from runtime to interactive server UI only when server is running\n    // in interactive mode.\n    if (!this.options.noInteractive) {\n      this.disposeLoggerProxy = this.runtime.logger.proxy((level, ...args) => {\n        this.ui.addLogItem(\n          this.runtime.logger.enhanceWithLevel(level, ...args)\n        );\n      });\n    }\n\n    this.resetConsole = this.hijackConsole();\n    this.compiler = this.createCompiler();\n    this.attachProcessEventsListeners();\n\n    const server = new Hapi.Server({\n      port,\n      host,\n      router: {\n        stripTrailingSlash: true,\n      },\n    });\n\n    const webSocketServer = new ws.Server({ server: server.listener });\n    const webSocketProxy = createWebsocketProxy(\n      webSocketServer,\n      '/debugger-proxy'\n    );\n    const debuggerProxy = new WebSocketDebuggerProxy(\n      this.runtime,\n      webSocketProxy\n    );\n\n    await server.register(require('@hapi/inert'));\n\n    server.events.on('response', request => {\n      if ('statusCode' in request.response) {\n        if (request.response.statusCode < 400) {\n          this.logServerEvent(request);\n        } else {\n          this.logServerEvent(request);\n        }\n      }\n    });\n\n    setupSymbolication(this.runtime, server, {\n      bundleNames: this.options.bundleNames,\n    });\n    setupLiveReload(this.runtime, server, this.compiler);\n    setupDevtoolRoutes(this.runtime, server, {\n      isDebuggerConnected: () => debuggerProxy.isDebuggerConnected(),\n    });\n    setupCompilerRoutes(this.runtime, server, this.compiler, {\n      port,\n      bundleNames: this.options.bundleNames,\n      platforms: this.options.platforms,\n      cliBundleOptions: {\n        minify: this.options.minify,\n        dev: this.options.dev,\n      },\n    });\n\n    await server.start();\n    this.ui.start(this.options.platforms);\n    this.runtime.logger.done(\n      `Packager server running on http://${host}:${port}`\n    );\n\n    this.options.eager.forEach(platform => {\n      this.compiler.emit(Compiler.Events.REQUEST_BUNDLE, {\n        filename: `/index.${platform}.bundle`, // NOTE: maybe the entry bundle is arbitrary\n        platform,\n        callback() {},\n      });\n    });\n  }\n\n  hijackConsole() {\n    if (this.options.noInteractive) {\n      return () => {};\n    }\n\n    /* eslint-disable no-console */\n    const log = console.log;\n    const error = console.error;\n\n    console.log = (...args) => {\n      this.ui.addLogItem(\n        this.runtime.logger.enhanceWithLevel(Logger.Level.Info, ...args)\n      );\n    };\n\n    console.error = (...args) => {\n      this.ui.addLogItem(\n        this.runtime.logger.enhanceWithLevel(Logger.Level.Error, ...args)\n      );\n    };\n\n    return () => {\n      console.log = log;\n      console.error = error;\n    };\n    /* eslint-enable no-console */\n  }\n\n  logServerEvent(request: Hapi.Request, event?: Hapi.RequestEvent) {\n    const { statusCode } = request.response as ResponseObject;\n    let logColor: AnsiColor = 'green';\n    let level: 'info' | 'warn' | 'error' = 'info';\n    if (statusCode >= 300 && statusCode < 400) {\n      logColor = 'yellow';\n      level = 'warn';\n    } else if (statusCode >= 400) {\n      logColor = 'red';\n      level = 'error';\n    }\n    this.runtime.logger[level](\n      container(\n        color(logColor, modifier('bold', request.method.toUpperCase())),\n        pad(1),\n        request.path,\n        pad(1),\n        color('gray', statusCode.toString()),\n        event ? event.tags.join(' ') : ''\n      ).build()\n    );\n  }\n}\n"],"file":"Server.js"}