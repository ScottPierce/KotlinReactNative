{"version":3,"sources":["../../src/server/InteractiveUI.ts"],"names":["Logs","length","lines","getSlice","slice","sliceStart","sliceMaxLength","clear","addItem","item","split","reduce","acc","line","wrappedLine","maxLineWidth","hard","concat","push","autoFollow","InteractiveUserInterface","constructor","terminal","renderLogsSection","moveTo","eraseLine","build","renderCompilationsSection","platforms","height","createCompilations","leftMargin","platformNameLength","Math","max","map","platform","forEach","index","compilations","width","min","value","title","repeat","toUpperCase","x","y","running","renderCompilationsProgress","Object","keys","compilation","barWidth","floor","updateCompilationProgress","renderLogs","LOGS_START_Y","logs","log","addLogItem","dispose","exitCode","exit","grabInput","hideCursor","fullscreen","processExit","start","mouse","on","name","console"],"mappings":"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","sourcesContent":["import { Terminal } from 'terminal-kit';\nimport { container, color, modifier, pad } from 'ansi-fragments';\nimport wrapAnsi from 'wrap-ansi';\nimport UserInterface from './UI';\n\nclass Logs {\n  autoFollow: boolean = true;\n  sliceStart: number = 0;\n  sliceMaxLength: number = 0;\n  maxLineWidth: number = 0;\n  private lines: string[] = [];\n\n  get length() {\n    return this.lines.length;\n  }\n\n  getSlice() {\n    return this.lines.slice(\n      this.sliceStart,\n      this.sliceStart + this.sliceMaxLength\n    );\n  }\n\n  clear() {\n    this.lines = [];\n  }\n\n  addItem(item: string) {\n    const lines = item.split('\\n').reduce((acc, line) => {\n      const wrappedLine = wrapAnsi(line, this.maxLineWidth, {\n        hard: true,\n      });\n      return acc.concat(...wrappedLine.split('\\n'));\n    }, [] as string[]);\n\n    this.lines.push(...lines);\n\n    if (this.length > this.sliceMaxLength && this.autoFollow) {\n      this.sliceStart = this.length - this.sliceMaxLength;\n    }\n  }\n}\n\nexport default class InteractiveUserInterface implements UserInterface {\n  private terminal: Terminal;\n  private logs: Logs = new Logs();\n  private compilations: {\n    [platform: string]: {\n      value: number;\n      title: string;\n      x: number;\n      y: number;\n      running: boolean;\n      width: number;\n    };\n  } = {};\n  private LOGS_START_Y = 3;\n\n  constructor(terminal: Terminal) {\n    this.terminal = terminal;\n  }\n\n  renderLogsSection() {\n    this.terminal.moveTo(0, 0);\n    this.terminal.eraseLine();\n    this.terminal(\n      container(\n        color('gray', '['),\n        color('blue', modifier('bold', 'Logs')),\n        color('gray', ']')\n      ).build()\n    );\n  }\n\n  renderCompilationsSection(platforms: string[]) {\n    this.terminal.moveTo(0, this.terminal.height - platforms.length - 2);\n    this.terminal(\n      container(\n        color('gray', '['),\n        color('blue', modifier('bold', 'Compilations')),\n        color('gray', ']')\n      ).build()\n    );\n  }\n\n  createCompilations(platforms: string[]) {\n    const leftMargin = 4;\n    const platformNameLength = Math.max(\n      ...platforms.map(platform => platform.length)\n    );\n\n    platforms.forEach((platform, index) => {\n      this.compilations[platform] = {\n        width: Math.min(110, this.terminal.width) - (platformNameLength + 22),\n        value: 0,\n        title: `${' '.repeat(\n          platformNameLength - platform.length\n        )}${platform.toUpperCase()}:`,\n        x: leftMargin,\n        y: this.terminal.height - platforms.length + index,\n        running: false,\n      };\n    });\n  }\n\n  renderCompilationsProgress() {\n    Object.keys(this.compilations).forEach(platform => {\n      const compilation = this.compilations[platform];\n      this.terminal.moveTo(compilation.x, compilation.y);\n      this.terminal.eraseLine();\n      this.terminal(\n        color('magenta', modifier('bold', compilation.title), pad(1)).build()\n      );\n\n      const barWidth = Math.max(\n        0,\n        Math.floor(compilation.value * compilation.width)\n      );\n      this.terminal(\n        container(\n          compilation.running ? 'running' : '   idle',\n          pad(1),\n          '[',\n          '='.repeat(barWidth),\n          '>',\n          ' '.repeat(compilation.width - barWidth),\n          ']',\n          pad(1),\n          color('yellow', `${Math.floor(compilation.value * 100)}%`)\n        ).build()\n      );\n    });\n  }\n\n  updateCompilationProgress(\n    platform: string,\n    { running, value }: { running: boolean; value: number }\n  ) {\n    this.compilations[platform].running = running;\n    this.compilations[platform].value = Math.min(1, value);\n    this.renderCompilationsProgress();\n  }\n\n  renderLogs() {\n    this.terminal.moveTo(0, this.LOGS_START_Y);\n    this.logs.getSlice().forEach((log, index) => {\n      this.terminal.moveTo(0, this.LOGS_START_Y + index);\n      this.terminal.eraseLine();\n      this.terminal(log);\n    });\n  }\n\n  addLogItem(item: string) {\n    this.logs.addItem(item);\n    if (this.logs.length < this.logs.sliceMaxLength || this.logs.autoFollow) {\n      this.renderLogs();\n    }\n    this.renderLogsSection();\n  }\n\n  dispose(exitCode: number = 0, exit: boolean = true) {\n    this.terminal.grabInput(false);\n    this.terminal.hideCursor(false);\n    this.terminal.fullscreen(false);\n    if (exit) {\n      this.terminal.processExit(exitCode);\n    }\n  }\n\n  start(platforms: string[]) {\n    this.logs.sliceStart = 0;\n    this.logs.sliceMaxLength = this.terminal.height - platforms.length - 6;\n    this.logs.maxLineWidth = this.terminal.width - 2;\n\n    this.terminal.fullscreen(true);\n    this.terminal.grabInput({ mouse: 'motion' });\n    this.terminal.hideCursor();\n\n    this.terminal.on('mouse', (name: string) => {\n      if (this.logs.length > this.logs.sliceMaxLength) {\n        if (name === 'MOUSE_WHEEL_UP') {\n          this.logs.sliceStart = Math.max(0, this.logs.sliceStart - 1);\n          this.logs.autoFollow = false;\n          this.renderLogs();\n        } else if (name === 'MOUSE_WHEEL_DOWN') {\n          this.logs.sliceStart = Math.min(\n            this.logs.length - this.logs.sliceMaxLength,\n            this.logs.sliceStart + 1\n          );\n          if (\n            this.logs.sliceStart + this.logs.sliceMaxLength ===\n            this.logs.length\n          ) {\n            this.logs.autoFollow = true;\n          }\n          this.renderLogs();\n          this.renderLogsSection();\n        }\n      }\n    });\n\n    this.terminal.on('key', (name: string) => {\n      if (name === 'CTRL_C') {\n        this.dispose();\n      }\n    });\n\n    this.terminal.on('resize', (width: number, height: number) => {\n      this.terminal.clear();\n      this.logs.sliceMaxLength = height - platforms.length - 6;\n      this.logs.maxLineWidth = width - 10;\n      this.logs.clear();\n      // eslint-disable-next-line no-console\n      console.log('Logs cleared due to terminal resize');\n      this.renderLogsSection();\n      this.renderLogs();\n      const platformNameLength = Math.max(\n        ...platforms.map(platform => platform.length)\n      );\n      Object.keys(this.compilations).forEach(platform => {\n        this.compilations[platform].width =\n          Math.min(110, this.terminal.width) - (platformNameLength + 20);\n      });\n      this.renderCompilationsSection(platforms);\n      this.renderCompilationsProgress();\n    });\n\n    this.renderLogsSection();\n    this.renderLogs();\n    this.createCompilations(platforms);\n    this.renderCompilationsSection(platforms);\n    this.renderCompilationsProgress();\n  }\n}\n"],"file":"InteractiveUI.js"}