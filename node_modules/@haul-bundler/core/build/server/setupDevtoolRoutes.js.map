{"version":3,"sources":["../../src/server/setupDevtoolRoutes.ts"],"names":["defaultAndroidEmulatorHostnames","getHostname","hostname","includes","setupDevtoolRoutes","runtime","server","isDebuggerConnected","route","method","path","handler","request","host","url","port","options","validate","payload","file","Joi","string","required","lineNumber","number","column","methodName","output","parse","h","filename","Date","now","message","logger","enhanceWithModifier","fs","writeFile","info","error","response","code","join","__dirname","confine","directory","redirectToSlash"],"mappings":"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","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport Hapi from '@hapi/hapi';\nimport Joi from '@hapi/joi';\nimport launchBrowser from './launchBrowser';\nimport Runtime from '../runtime/Runtime';\nimport openInEditor from './openInEditor';\nimport { promisify } from 'util';\n\nconst defaultAndroidEmulatorHostnames: string[] = ['10.0.2.2', '10.0.3.2'];\n\n// If no debug_http_host is set, use localhost as the hostname.\n// The iOS Simulator will use localhost as a default.\nfunction getHostname(hostname: string): string {\n  return defaultAndroidEmulatorHostnames.includes(hostname)\n    ? 'localhost'\n    : hostname;\n}\n\nexport default function setupDevtoolRoutes(\n  runtime: Runtime,\n  server: Hapi.Server,\n  { isDebuggerConnected }: { isDebuggerConnected: () => boolean }\n) {\n  server.route({\n    method: 'GET',\n    path: '/launch-js-devtools',\n    handler: request => {\n      // Open debugger page only if it's not already open.\n      const host = getHostname(request.url.hostname);\n      if (!isDebuggerConnected()) {\n        launchBrowser(\n          runtime,\n          `http://${host}:${request.url.port}/debugger-ui`\n        );\n      }\n      return 'OK';\n    },\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/open-stack-frame',\n    options: {\n      validate: {\n        payload: {\n          file: Joi.string().required(),\n          lineNumber: Joi.number().required(),\n          column: Joi.number().required(),\n          methodName: Joi.string().required(),\n        },\n      },\n    },\n    handler: async request => {\n      const { file, lineNumber, column } = request.payload as {\n        lineNumber: number;\n        column: number;\n        file: string;\n      };\n      const url = `${file}:${lineNumber}:${column}`;\n      await openInEditor(runtime, url);\n\n      return 'OK';\n    },\n  });\n\n  server.route({\n    method: 'POST',\n    path: '/systrace',\n    options: {\n      payload: {\n        output: 'data',\n        parse: false,\n      },\n    },\n    handler: async (request, h) => {\n      const filename = `/tmp/haul_${Date.now()}.json`;\n      const message = `We've saved the trace report at ${runtime.logger.enhanceWithModifier(\n        'bold',\n        filename\n      )}\\nYou can open the trace report in Google Chrome by navigating to 'chrome://tracing' and clicking 'load'.`;\n      try {\n        await promisify(fs.writeFile)(filename, request.payload);\n        runtime.logger.info(message);\n      } catch (error) {\n        return h.response().code(200);\n      }\n\n      return message;\n    },\n  });\n\n  server.route({\n    method: 'GET',\n    path: '/status',\n    handler: () => 'packager-status:running',\n  });\n\n  server.route({\n    method: 'GET',\n    path: '/debugger-ui',\n    handler: {\n      file: {\n        path: path.join(__dirname, '../../assets/debugger.html'),\n        confine: false,\n      },\n    },\n  });\n\n  server.route({\n    method: 'GET',\n    path: '/debugger-ui/{param*}',\n    handler: {\n      directory: {\n        path: path.join(__dirname, '../../assets'),\n        redirectToSlash: true,\n      },\n    },\n  });\n}\n"],"file":"setupDevtoolRoutes.js"}