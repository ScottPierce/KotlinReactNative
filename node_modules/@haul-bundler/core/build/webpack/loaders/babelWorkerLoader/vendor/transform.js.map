{"version":3,"sources":["../../../../../src/webpack/loaders/babelWorkerLoader/vendor/transform.ts"],"names":["transform","babel","source","options","result","err","message","codeFrame","LoaderError","ast","code","map","metadata","sourceType","sourcesContent","length","version"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEA,MAAMA,SAAS,GAAG,mBAAUC,KAAK,CAACD,SAAhB,CAAlB;;AAEe,wBACbE,MADa,EAEbC,OAFa,EAGb;AAAA;;AACA,MAAIC,MAAJ;;AACA,MAAI;AACFA,IAAAA,MAAM,GAAG,MAAMJ,SAAS,CAACE,MAAD,EAASC,OAAT,CAAxB;AACD,GAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,UAAMA,GAAG,CAACC,OAAJ,IAAeD,GAAG,CAACE,SAAnB,GAA+B,IAAIC,cAAJ,CAAgBH,GAAhB,CAA/B,GAAsDA,GAA5D;AACD;;AAED,MAAI,CAACD,MAAL,EAAa,OAAO,IAAP;AAEb,QAAM;AAAEK,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,MAA2CT,MAAjD;;AAEA,MAAIO,GAAJ,aAAIA,GAAJ,8CAAIA,GAAG,CAAEG,cAAT,wDAAI,oBAAqBC,MAAzB,EAAiC;AAC/BJ,IAAAA,GAAG,CAACG,cAAJ,GAAqB,CAACZ,MAAD,CAArB;AACD;;AAED,SAAO;AAAEO,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,GAAP;AACD;;AAAA;AAEM,MAAMG,OAAO,GAAGf,KAAK,CAACe,OAAtB","sourcesContent":["import * as babel from '@babel/core';\nimport promisify from 'pify';\n\nimport LoaderError from './error';\n\nconst transform = promisify(babel.transform);\n\nexport default async function(\n  source: string,\n  options: babel.TransformOptions | undefined\n) {\n  let result;\n  try {\n    result = await transform(source, options);\n  } catch (err) {\n    throw err.message && err.codeFrame ? new LoaderError(err) : err;\n  }\n\n  if (!result) return null;\n\n  const { ast, code, map, metadata, sourceType } = result;\n\n  if (map?.sourcesContent?.length) {\n    map.sourcesContent = [source];\n  }\n\n  return { ast, code, map, metadata, sourceType };\n};\n\nexport const version = babel.version;\n"],"file":"transform.js"}