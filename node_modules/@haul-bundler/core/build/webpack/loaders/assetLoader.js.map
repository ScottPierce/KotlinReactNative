{"version":3,"sources":["../../../src/webpack/loaders/assetLoader.ts"],"names":["assetLoader","cacheable","callback","async","runtime","_runtime","Runtime","query","utils","getOptions","config","platform","root","process","cwd","pathSepPattern","RegExp","path","sep","filePath","resourcePath","dirname","url","relative","replace","type","extname","assets","join","bundle","suffix","filename","basename","normalizedName","length","longName","toLowerCase","result","Promise","resolve","reject","fs","readdir","err","res","map","AssetResolver","collect","name","scales","Object","keys","s","Number","sort","pairs","all","scale","addDependency","readFile","logger","debug","dest","testXml","testMP4","testImages","testFonts","test","indexOf","Error","destination","content","forEach","item","outputPath","emitFile","publicPath","JSON","stringify","hashes","algorithm","info","match","isFinite","width","height","e","error","dedent","raw"],"mappings":"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","sourcesContent":["import utils from 'loader-utils';\nimport { imageSize } from 'image-size';\nimport path from 'path';\nimport dedent from 'dedent';\nimport hasha from 'hasha';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport Runtime from '../../runtime/Runtime';\nimport AssetResolver from '../resolvers/AssetResolver';\n\ntype Config = {\n  platform: string;\n  bundle?: boolean;\n  root: string;\n  outputPath?: string | ((path: string) => string);\n  publicPath?: string | ((path: string) => string);\n};\n\nasync function assetLoader(this: any) {\n  this.cacheable();\n\n  const callback = this.async();\n  const { runtime: _runtime = new Runtime(), ...query } =\n    utils.getOptions(this) || {};\n  const runtime: Runtime = _runtime;\n  const config: Config = {\n    platform: 'ios',\n    root: process.cwd(),\n    ...query,\n  };\n  const pathSepPattern = new RegExp(`\\\\${path.sep}`, 'g');\n  const filePath: string = this.resourcePath;\n  const dirname = path.dirname(filePath);\n  // Relative path to root without any ../ due to https://github.com/callstack/haul/issues/474\n  // Assets from from outside of root, should still be placed inside bundle output directory.\n  // Example:\n  //   filePath = monorepo/node_modules/my-module/image.png\n  //   dirname  = monorepo/node_modules/my-module\n  //   root     = monorepo/packages/my-app/\n  //   url      = ../../node_modules/my-module (original)\n  // So when we calculate destination for the asset for iOS ('assets' + url + filename),\n  // it will end up outside of `assets` directory, so we have to make sure it's:\n  //   url      = node_modules/my-module (tweaked)\n  const url = path\n    .relative(config.root, dirname)\n    .replace(new RegExp(`^[\\\\.\\\\${path.sep}]+`), '');\n  const type = path.extname(filePath).replace(/^\\./, '');\n  const assets = path.join('assets', config.bundle ? '' : config.platform);\n  const suffix = `(@\\\\d+(\\\\.\\\\d+)?x)?(\\\\.(${config.platform}|native))?\\\\.${type}$`;\n  const filename = path.basename(filePath).replace(new RegExp(suffix), '');\n  const normalizedName =\n    url.length === 0\n      ? filename\n      : `${url.replace(pathSepPattern, '_')}_${filename}`;\n  const longName = `${normalizedName\n    .toLowerCase()\n    .replace(/[^a-z0-9_]/g, '')}.${type}`;\n\n  const result: string[] = await new Promise((resolve, reject) =>\n    this.fs.readdir(dirname, (err: Error | null, res: string[]) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    })\n  );\n\n  const map = AssetResolver.collect(result, {\n    name: filename,\n    type,\n    platform: config.platform,\n  });\n\n  const scales = Object.keys(map)\n    .map(s => Number(s.replace(/[^\\d.]/g, '')))\n    .sort();\n\n  const pairs = await Promise.all(\n    Object.keys(map).map(\n      (\n        scale\n      ): Promise<{\n        destination: string;\n        content: string;\n      }> => {\n        this.addDependency(path.join(dirname, map[scale].name));\n\n        return new Promise((resolve, reject) =>\n          this.fs.readFile(\n            path.join(dirname, map[scale].name),\n            (err: Error | null, res: any) => {\n              runtime.logger.debug(`Asset: ${scale} for ${filePath}`);\n\n              if (err) {\n                reject(err);\n              } else {\n                let dest;\n\n                if (config.bundle && config.platform === 'android') {\n                  const testXml = /\\.(xml)$/;\n                  const testMP4 = /\\.(mp4)$/;\n                  const testImages = /\\.(png|jpg|gif|webp)$/;\n                  const testFonts = /\\.(ttf|otf|ttc)$/;\n\n                  // found font family\n                  if (\n                    testXml.test(longName) &&\n                    res.indexOf('font-family') !== -1\n                  ) {\n                    dest = 'font';\n                  } else if (testFonts.test(longName)) {\n                    // font extensions\n                    dest = 'font';\n                  } else if (testMP4.test(longName)) {\n                    // video files extensions\n                    dest = 'raw';\n                  } else if (\n                    testImages.test(longName) ||\n                    testXml.test(longName)\n                  ) {\n                    // images extensions\n                    switch (scale) {\n                      case '@0.75x':\n                        dest = 'drawable-ldpi';\n                        break;\n                      case '@1x':\n                        dest = 'drawable-mdpi';\n                        break;\n                      case '@1.5x':\n                        dest = 'drawable-hdpi';\n                        break;\n                      case '@2x':\n                        dest = 'drawable-xhdpi';\n                        break;\n                      case '@3x':\n                        dest = 'drawable-xxhdpi';\n                        break;\n                      case '@4x':\n                        dest = 'drawable-xxxhdpi';\n                        break;\n                      default:\n                        throw new Error(\n                          `Unknown scale ${scale} for ${filePath}`\n                        );\n                    }\n                  } else {\n                    // everything else is going to RAW\n                    dest = 'raw';\n                  }\n\n                  dest = path.join(dest, longName);\n                } else {\n                  const name = `${filename}${\n                    scale === '@1x' ? '' : scale\n                  }.${type}`;\n                  dest = path.join(assets, url, name);\n                }\n\n                runtime.logger.debug(\n                  `Asset: file ${filePath} --> destination: ${dest}`\n                );\n\n                resolve({\n                  destination: dest,\n                  content: res,\n                });\n              }\n            }\n          )\n        );\n      }\n    )\n  );\n\n  pairs.forEach(item => {\n    let dest = item.destination;\n\n    if (config.outputPath) {\n      // support functions as outputPath to generate them dynamically\n      dest =\n        typeof config.outputPath === 'function'\n          ? config.outputPath(dest)\n          : path.join(config.outputPath, dest);\n    }\n\n    this.emitFile(dest, item.content);\n  });\n\n  let publicPath = JSON.stringify(\n    path.join(assets, url).replace(pathSepPattern, '/')\n  );\n\n  if (config.publicPath) {\n    // support functions as publicPath to generate them dynamically\n    publicPath = JSON.stringify(\n      typeof config.publicPath === 'function'\n        ? config.publicPath(url)\n        : path.join(config.publicPath, url)\n    );\n  }\n\n  const hashes = pairs.map(item =>\n    hasha(item.content, {\n      algorithm: 'md5',\n    })\n  );\n\n  let info: ReturnType<typeof imageSize> | undefined;\n\n  try {\n    runtime.logger.debug(`Asset: path ${this.resourcePath}`);\n\n    info = imageSize(this.resourcePath);\n\n    const match = path\n      .basename(this.resourcePath)\n      .match(new RegExp(`^${escapeStringRegexp(filename)}${suffix}`));\n\n    if (match?.[1]) {\n      const scale = Number(match[1].replace(/[^\\d.]/g, ''));\n\n      if (typeof scale === 'number' && Number.isFinite(scale)) {\n        info.width && (info.width /= scale);\n        info.height && (info.height /= scale);\n      }\n    }\n  } catch (e) {\n    // Asset is not an image\n    runtime.logger.error(`Asset: unable to process ${this.resourcePath}`);\n  }\n\n  callback(\n    null,\n    dedent`\n      var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\n      module.exports = AssetRegistry.registerAsset({\n        __packager_asset: true,\n        scales: ${JSON.stringify(scales)},\n        name: ${JSON.stringify(filename)},\n        type: ${JSON.stringify(type)},\n        hash: ${JSON.stringify(hashes.join())},\n        httpServerLocation: ${publicPath},\n        ${\n          config.bundle ? '' : `fileSystemLocation: ${JSON.stringify(dirname)},`\n        }\n        ${info ? `height: ${info.height},` : ''}\n        ${info ? `width: ${info.width},` : ''}\n      });\n      `\n  );\n}\n\nassetLoader.raw = true;\n\nexport default assetLoader;\n"],"file":"assetLoader.js"}