{"version":3,"sources":["../../../src/webpack/plugins/LooseModeWebpackPlugin.ts"],"names":["LooseModeWebpackPlugin","constructor","checkLooseMode","apply","compiler","hooks","make","tap","compilation","moduleTemplates","javascript","render","moduleSource","resource","useLooseMode","source","match","index","undefined","replacement","sources","ReplaceSource","replace","length"],"mappings":";;;;;;;AACA;;;;AAEe,MAAMA,sBAAN,CAA6B;AAC1CC,EAAAA,WAAW,CAAQC,cAAR,EAAuD;AAAA,SAA/CA,cAA+C,GAA/CA,cAA+C;AAAE;;AAEpEC,EAAAA,KAAK,CAACC,QAAD,EAA6B;AAChCA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,IAAf,CAAoBC,GAApB,CACE,wBADF,EAEGC,WAAD,IAAkD;AAChDA,MAAAA,WAAW,CAACC,eAAZ,CAA4BC,UAA5B,CAAuCL,KAAvC,CAA6CM,MAA7C,CAAoDJ,GAApD,CACE,wBADF,EAEE,CACEK,YADF,EAEE;AAAEC,QAAAA;AAAF,OAFF,KAGK;AACH,cAAMC,YAAY,GAAG,KAAKZ,cAAL,CAAoBW,QAApB,CAArB;;AACA,YAAI,CAACC,YAAL,EAAmB;AACjB,iBAAOF,YAAP;AACD;;AAED,cAAMG,MAAM,GAAGH,YAAY,CAACG,MAAb,EAAf;AACA,cAAMC,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAa,oBAAb,CAAd;;AACA,YAAI,CAACA,KAAD,IAAUA,KAAK,CAACC,KAAN,KAAgBC,SAA9B,EAAyC;AACvC,iBAAON,YAAP;AACD;;AACD,cAAMO,WAAW,GAAG,IAAIC,wBAAQC,aAAZ,CAA0BT,YAA1B,CAApB;AACAO,QAAAA,WAAW,CAACG,OAAZ,CAAoBN,KAAK,CAACC,KAA1B,EAAiCD,KAAK,CAACC,KAAN,GAAcD,KAAK,CAAC,CAAD,CAAL,CAASO,MAAxD,EAAgE,EAAhE;AACA,eAAOJ,WAAP;AACD,OAnBH;AAqBD,KAxBH;AA0BD;;AA9ByC","sourcesContent":["import webpack from 'webpack';\nimport sources from 'webpack-sources';\n\nexport default class LooseModeWebpackPlugin {\n  constructor(public checkLooseMode: (filename: string) => boolean) {}\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.make.tap(\n      'LooseModeWebpackPlugin',\n      (compilation: webpack.compilation.Compilation) => {\n        compilation.moduleTemplates.javascript.hooks.render.tap(\n          'LooseModeWebpackPlugin',\n          (\n            moduleSource: sources.Source,\n            { resource }: { resource: string }\n          ) => {\n            const useLooseMode = this.checkLooseMode(resource);\n            if (!useLooseMode) {\n              return moduleSource;\n            }\n\n            const source = moduleSource.source();\n            const match = source.match(/['\"]use strict['\"]/);\n            if (!match || match.index === undefined) {\n              return moduleSource;\n            }\n            const replacement = new sources.ReplaceSource(moduleSource);\n            replacement.replace(match.index, match.index + match[0].length, '');\n            return replacement;\n          }\n        );\n      }\n    );\n  }\n}\n"],"file":"LooseModeWebpackPlugin.js"}