{"version":3,"sources":["../../src/config/getNormalizedProjectConfigBuilder.ts"],"names":["getNormalizedProjectConfigBuilder","runtime","configPath","config","Error","resolve","require","exports","__esModule","default"],"mappings":";;;;;;;AACA;;;;AAGe,SAASA,iCAAT,CACbC,OADa,EAEbC,UAFa,EAGmB;AAChC,MAAIC,MAAJ;AAEA;;;;;AAIA,MAAI,CAACD,UAAL,EAAiB;AACf,UAAM,IAAIE,KAAJ,CAAU,gCAAV,CAAN;AACD,GAFD,MAEO;AACLD,IAAAA,MAAM,GAAG,2BAAaD,UAAb,EAAyB;AAAEG,MAAAA,OAAO,EAAEC,OAAO,CAACD,OAAnB;AAA4BJ,MAAAA;AAA5B,KAAzB,EACNM,OADH;AAEAJ,IAAAA,MAAM,GAAGA,MAAM,CAACK,UAAP,GAAoBL,MAAM,CAACM,OAA3B,GAAqCN,MAA9C;AACD;;AAED,MAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,UAAM,IAAIC,KAAJ,CACH,uBAAsBF,UAAW,gFAD9B,CAAN;AAGD;;AAED,SAAOC,MAAP;AACD","sourcesContent":["import { NormalizedProjectConfigBuilder } from './types';\nimport importModule from '../utils/importModule';\nimport Runtime from '../runtime/Runtime';\n\nexport default function getNormalizedProjectConfigBuilder(\n  runtime: Runtime,\n  configPath?: string\n): NormalizedProjectConfigBuilder {\n  let config;\n\n  /**\n   * When it doesn't have DEFAULT_CONFIG_FILENAME and it's not specified another file\n   * we will use default configuration based on main file from package.json\n   */\n  if (!configPath) {\n    throw new Error(\"Couldn't find `haul.config.js`\");\n  } else {\n    config = importModule(configPath, { resolve: require.resolve, runtime })\n      .exports;\n    config = config.__esModule ? config.default : config;\n  }\n\n  if (typeof config !== 'function') {\n    throw new Error(\n      `Exported value from ${configPath} does not seem to be a valid Haul config - did you forget to use \"makeConfig\"?`\n    );\n  }\n\n  return config as NormalizedProjectConfigBuilder;\n}\n"],"file":"getNormalizedProjectConfigBuilder.js"}