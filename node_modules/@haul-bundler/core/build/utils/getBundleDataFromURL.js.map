{"version":3,"sources":["../../src/utils/getBundleDataFromURL.ts"],"names":["getBundleDataFromURL","url","name","type","platform","path","file","startsWith","baseUrl","filename","exec","undefined","Error","match","filePath","segments","split","length","slice","join"],"mappings":";;;;;;;AAOe,SAASA,oBAAT,CAA8BC,GAA9B,EAAuD;AACpE,MAAIC,IAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,IAAJ;;AAEA,MAAIL,GAAG,CAACM,UAAJ,CAAe,MAAf,CAAJ,EAA4B;AAC1B,UAAM,GAAGC,OAAH,EAAYC,QAAZ,IAAwB,0BAA0BC,IAA1B,CAA+BT,GAA/B,KAAuC,CACnE,EADmE,EAEnEU,SAFmE,EAGnEA,SAHmE,CAArE;;AAKA,QAAI,CAACH,OAAD,IAAY,CAACC,QAAjB,EAA2B;AACzB,YAAM,IAAIG,KAAJ,CAAW,GAAEX,GAAI,4BAAjB,CAAN;AACD;;AAEDI,IAAAA,IAAI,GAAGG,OAAP;AACAJ,IAAAA,QAAQ,GAAG,CAACK,QAAQ,CAACI,KAAT,CAAe,sBAAf,KAA0C,CAAC,EAAD,EAAKF,SAAL,CAA3C,EAA4D,CAA5D,CAAX;AACAL,IAAAA,IAAI,GAAG,CAACG,QAAQ,CAACI,KAAT,CAAe,UAAf,KAA8B,CAAC,EAAD,EAAK,EAAL,CAA/B,EAAyC,CAAzC,CAAP;AACD,GAbD,MAaO;AACL,UAAM,GAAGC,QAAH,EAAaL,QAAb,IAAyB,kBAAkBC,IAAlB,CAAuBT,GAAvB,KAA+B,CAC5D,EAD4D,EAE5D,EAF4D,EAG5DU,SAH4D,CAA9D;;AAKA,QAAI,CAACF,QAAL,EAAe;AACb,YAAM,IAAIG,KAAJ,CAAW,GAAEX,GAAI,4BAAjB,CAAN;AACD;;AAEDK,IAAAA,IAAI,GAAGG,QAAP;AACAJ,IAAAA,IAAI,GAAGS,QAAP;AACD;;AAED,QAAMC,QAAQ,GAAGT,IAAI,CAACU,KAAL,CAAW,GAAX,CAAjB;;AACA,MAAID,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACvBf,IAAAA,IAAI,GAAGa,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBH,QAAQ,CAACE,MAAT,GAAkB,CAApC,EAAuCE,IAAvC,CAA4C,GAA5C,CAAP;AACAf,IAAAA,QAAQ,GAAGW,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAkB,CAAnB,CAAnB;AACAd,IAAAA,IAAI,GAAGY,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAkB,CAAnB,CAAf;AACD,GAJD,MAIO;AACL,KAACf,IAAD,EAAOC,IAAP,IAAeY,QAAf;AACD;;AAED,SAAO;AACLb,IAAAA,IADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,QAHK;AAILC,IAAAA,IAAI,EAAEA,IAAI,IAAI;AAJT,GAAP;AAMD","sourcesContent":["type BundleData = {\n  name: string;\n  type: string;\n  platform?: string;\n  path: string;\n};\n\nexport default function getBundleDataFromURL(url: string): BundleData {\n  let name: string;\n  let type: string;\n  let platform: string | undefined;\n  let path: string | undefined;\n  let file: string;\n\n  if (url.startsWith('http')) {\n    const [, baseUrl, filename] = /^(https?:\\/\\/.+\\/)(.+)$/.exec(url) || [\n      '',\n      undefined,\n      undefined,\n    ];\n    if (!baseUrl || !filename) {\n      throw new Error(`${url} is not a valid bundle URL`);\n    }\n\n    path = baseUrl;\n    platform = (filename.match(/platform=([a-zA-Z]*)/) || ['', undefined])[1];\n    file = (filename.match(/^([^?]+)/) || ['', ''])[1];\n  } else {\n    const [, filePath, filename] = /(.*\\/)?([^/]+)$/.exec(url) || [\n      '',\n      '',\n      undefined,\n    ];\n    if (!filename) {\n      throw new Error(`${url} is not a valid bundle URL`);\n    }\n\n    file = filename;\n    path = filePath;\n  }\n\n  const segments = file.split('.');\n  if (segments.length > 2) {\n    name = segments.slice(0, segments.length - 2).join('.');\n    platform = segments[segments.length - 2];\n    type = segments[segments.length - 1];\n  } else {\n    [name, type] = segments;\n  }\n\n  return {\n    name,\n    type,\n    platform,\n    path: path || '',\n  };\n}\n"],"file":"getBundleDataFromURL.js"}