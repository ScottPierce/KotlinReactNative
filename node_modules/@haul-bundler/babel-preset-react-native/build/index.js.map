{"version":3,"sources":["../src/index.ts"],"names":["isTypeScriptSource","fileName","endsWith","isTSXSource","isReactNative","includes","path","sep","commonJsPlugin","allowTopLevelThis","getDefaultPrePlugins","loose","getDefaultPostPlugins","getHermesPlugins","getChakraPlugins","getHaulPlugins","platform","require","resolve","getTsPlugins","isTSX","getReactNativePlugins","getDevelopmentEnvPlugins","getTestEnvPlugins","requirePlugin","plugin","concat","getHaulBabelPreset","api","options","compact","env","test","plugins","map","development","overrides","hermes","chakra","process","HAUL_PLATFORM"],"mappings":"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","sourcesContent":["import path from 'path';\n\nexport function isTypeScriptSource(fileName: string) {\n  return !!fileName && fileName.endsWith('.ts');\n}\n\nexport function isTSXSource(fileName: string) {\n  return !!fileName && fileName.endsWith('.tsx');\n}\n\nexport function isReactNative(fileName: string) {\n  return !!fileName && fileName.includes(`node_modules${path.sep}react-native`);\n}\n\ntype PluginSpec = [string] | [string, object];\n\nconst commonJsPlugin: PluginSpec = [\n  '@babel/plugin-transform-modules-commonjs',\n  { allowTopLevelThis: true },\n];\n\nexport function getDefaultPrePlugins(): PluginSpec[] {\n  return [\n    // The flow strip types plugin must go BEFORE class properties!\n    ['@babel/plugin-transform-flow-strip-types'],\n    ['@babel/plugin-proposal-class-properties', { loose: true }],\n    ['@babel/plugin-proposal-optional-catch-binding'],\n    ['@babel/plugin-syntax-dynamic-import'],\n    ['@babel/plugin-syntax-export-default-from'],\n    ['@babel/plugin-transform-react-jsx'],\n    ['@babel/plugin-transform-sticky-regex'],\n    ['@babel/plugin-transform-unicode-regex'],\n    [\n      // For some reason native async/await don't behave correctly\n      // on RN 0.59 on both platforms, so we need to transpile it\n      // to native Promises.\n      './transforms/superMemberArrowFunction',\n    ],\n    ['@babel/plugin-transform-async-to-generator'],\n  ];\n}\n\nexport function getDefaultPostPlugins(): PluginSpec[] {\n  return [\n    ['@babel/plugin-transform-exponentiation-operator'],\n    ['@babel/plugin-proposal-nullish-coalescing-operator', { loose: true }],\n    ['@babel/plugin-proposal-optional-chaining', { loose: true }],\n    ['@babel/plugin-transform-react-display-name'],\n    ['metro-react-native-babel-preset/src/transforms/transform-symbol-member'],\n  ];\n}\n\nexport function getHermesPlugins(): PluginSpec[] {\n  // Additional plugins for Hermes because it doesn't support ES6 yet\n  return [\n    ['@babel/plugin-transform-computed-properties'],\n    ['@babel/plugin-transform-destructuring'],\n    ['@babel/plugin-transform-regenerator'],\n    ['@babel/plugin-transform-shorthand-properties'],\n    ['@babel/plugin-transform-classes'],\n    ['@babel/plugin-transform-arrow-functions'],\n    ['@babel/plugin-transform-spread'],\n    ['@babel/plugin-proposal-object-rest-spread'],\n    ['@babel/plugin-transform-template-literals', { loose: true }],\n    ['@babel/plugin-transform-for-of', { loose: true }],\n  ];\n}\n\nexport function getChakraPlugins(): PluginSpec[] {\n  return [\n    ['@babel/plugin-transform-spread'],\n    ['@babel/plugin-proposal-object-rest-spread'],\n  ];\n}\n\nexport function getHaulPlugins({\n  platform,\n}: {\n  platform: string;\n}): PluginSpec[] {\n  return [\n    [require.resolve('./transforms/stripDeadPlatformSelect'), { platform }],\n  ];\n}\n\nexport function getTsPlugins({ isTSX }: { isTSX: boolean }): PluginSpec[] {\n  return [\n    [\n      '@babel/plugin-transform-typescript',\n      {\n        isTSX,\n      },\n    ],\n  ];\n}\n\nexport function getReactNativePlugins(): PluginSpec[] {\n  return [commonJsPlugin];\n}\n\nexport function getDevelopmentEnvPlugins(): PluginSpec[] {\n  return [['@babel/plugin-transform-react-jsx-source']];\n}\n\nexport function getTestEnvPlugins(): PluginSpec[] {\n  return [commonJsPlugin, ...getDevelopmentEnvPlugins()];\n}\n\nfunction requirePlugin(plugin: PluginSpec) {\n  return [require(plugin[0])].concat(...(plugin[1] ? [plugin[1]] : []));\n}\n\nexport default function getHaulBabelPreset(\n  api: any,\n  options: { hermes?: boolean; chakra?: boolean }\n) {\n  return {\n    compact: false,\n    env: {\n      // Add CommonJS transform when running in NODE_ENV === test, for example when testing.\n      test: {\n        plugins: getTestEnvPlugins().map(requirePlugin),\n      },\n      development: {\n        plugins: getDevelopmentEnvPlugins().map(requirePlugin),\n      },\n    },\n    overrides: [\n      {\n        plugins: [\n          ...getDefaultPrePlugins().map(requirePlugin),\n          ...(options.hermes ? getHermesPlugins() : []).map(requirePlugin),\n          ...(options.chakra ? getChakraPlugins() : []).map(requirePlugin),\n          ...(process.env.HAUL_PLATFORM\n            ? getHaulPlugins({ platform: process.env.HAUL_PLATFORM })\n            : []\n          ).map(requirePlugin),\n        ],\n      },\n      {\n        test: isReactNative,\n        plugins: getReactNativePlugins().map(requirePlugin),\n      },\n      {\n        test: isTypeScriptSource,\n        plugins: getTsPlugins({ isTSX: false }).map(requirePlugin),\n      },\n      {\n        test: isTSXSource,\n        plugins: getTsPlugins({ isTSX: true }).map(requirePlugin),\n      },\n      {\n        plugins: getDefaultPostPlugins().map(requirePlugin),\n      },\n    ],\n  };\n}\n"],"file":"index.js"}