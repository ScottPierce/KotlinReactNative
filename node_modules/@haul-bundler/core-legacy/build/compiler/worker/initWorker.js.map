{"version":3,"sources":["../../../src/compiler/worker/initWorker.js"],"names":["fs","require","path","WebSocket","mime","Events","runWebpackCompiler","module","exports","initWorker","platform","options","socketAddress","webSocket","send","type","payload","JSON","stringify","outputPath","parse","configOptions","assetsDest","on","compiler","e","BUILD_FAILED","message","BUILD_START","LOG","BUILD_PROGRESS","BUILD_FINISHED","error","stats","toJson","emit","data","toString","REQUEST_FILE","filePath","join","filename","existsSync","FILE_RECEIVED","taskId","mimeType","lookup","FILE_NOT_FOUND","console","log"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017-present, Callstack.\n * All rights reserved.\n *\n * @flow\n */\n\nconst fs = require('fs');\nconst path = require('path');\nconst WebSocket = require('ws');\nconst mime = require('mime-types');\n\nconst Events = require('../events');\nconst runWebpackCompiler = require('./runWebpackCompiler');\n\nmodule.exports = function initWorker({\n  platform,\n  options,\n  socketAddress,\n}: {\n  [key: string]: string,\n}) {\n  const webSocket = new WebSocket(\n    `ws://${socketAddress}/?platform=${platform}`\n  );\n\n  function send(type, payload = {}) {\n    webSocket.send(\n      JSON.stringify({\n        type,\n        ...payload,\n      })\n    );\n  }\n\n  const outputPath = JSON.parse(options).configOptions.assetsDest;\n\n  webSocket.on('open', async () => {\n    let compiler;\n\n    try {\n      compiler = await runWebpackCompiler({\n        platform,\n        options,\n      });\n    } catch (e) {\n      send(Events.BUILD_FAILED, { message: e.message });\n      throw e;\n    }\n\n    compiler.on(Events.BUILD_START, () => {\n      send(Events.BUILD_START);\n    });\n\n    compiler.on(Events.LOG, payload => {\n      send(Events.LOG, payload);\n    });\n\n    compiler.on(Events.BUILD_FAILED, payload => {\n      send(Events.BUILD_FAILED, payload);\n    });\n\n    compiler.on(Events.BUILD_PROGRESS, payload => {\n      send(Events.BUILD_PROGRESS, payload);\n    });\n\n    compiler.on(Events.BUILD_FINISHED, ({ error, stats }) => {\n      send(Events.BUILD_FINISHED, {\n        error,\n        stats: stats ? stats.toJson() : null,\n      });\n    });\n\n    compiler.emit('start');\n  });\n\n  webSocket.on('message', data => {\n    const { type, ...payload } = JSON.parse(data.toString());\n\n    if (type === Events.REQUEST_FILE) {\n      const filePath = path.join(outputPath, payload.filename);\n      if (fs.existsSync(filePath)) {\n        send(Events.FILE_RECEIVED, {\n          taskId: payload.taskId,\n          filePath,\n          mimeType: mime.lookup(payload.filename) || 'text/javascript',\n        });\n      } else {\n        send(Events.FILE_NOT_FOUND, {\n          taskId: payload.taskId,\n        });\n      }\n    } else {\n      console.log(`Unknown event ${JSON.stringify(type)}`);\n    }\n  });\n};\n"],"file":"initWorker.js"}