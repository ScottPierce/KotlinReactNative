{"version":3,"sources":["../../../src/compiler/worker/runWebpackCompiler.js"],"names":["EventEmitter","require","webpack","Events","module","exports","runWebpackCompiler","platform","options","emitter","configPath","configOptions","JSON","parse","runtime","Runtime","logger","proxy","level","args","setImmediate","emit","LOG","message","stringify","join","outputPath","assetsDest","projectConfig","apps","bundles","skipHostCheck","totalProgress","bundlesBuilt","bundleName","bundleConfig","external","bundleFilename","templates","fs","copyFileSync","bundlePath","path","done","dll","error","permissions","code","stats","statSync","mode","parseInt","toString","statError","setTimeout","BUILD_FAILED","existsSync","basename","cpx","copySync","assetsPath","preserve","config","webpackConfigs","lastLocalProgress","plugins","ProgressPlugin","localProgress","length","BUILD_PROGRESS","progress","Promise","resolve","reject","run","err","push","compiler","hooks","intercept","call","BUILD_FINISHED","invalid","tap","BUILD_START","on","watch"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017-present, Callstack.\n * All rights reserved.\n *\n * @flow\n */\nimport {\n  sortBundlesByDependencies,\n  getNormalizedProjectConfigBuilder,\n  Runtime,\n  getBundleFilename,\n} from '@haul-bundler/core';\nimport fs from 'fs';\nimport path from 'path';\nimport cpx from 'cpx';\n\nconst EventEmitter = require('events');\nconst webpack = require('webpack');\n\nconst Events = require('../events');\n\nmodule.exports = async function runWebpackCompiler({\n  platform,\n  options,\n}: {\n  [key: string]: any,\n}) {\n  const emitter = new EventEmitter();\n  const { configPath, configOptions } = JSON.parse(options);\n\n  const runtime = new Runtime();\n  runtime.logger.proxy((level, ...args) => {\n    setImmediate(() => {\n      emitter.emit(Events.LOG, {\n        message: runtime.logger.stringify(args).join(' '),\n        level,\n      });\n    });\n  });\n\n  const outputPath = configOptions.assetsDest;\n  const projectConfig = getNormalizedProjectConfigBuilder(runtime, configPath)(\n    runtime,\n    {\n      ...configOptions,\n      platform,\n    }\n  );\n\n  const apps = [];\n  const bundles = sortBundlesByDependencies(projectConfig, {\n    skipHostCheck: configOptions.skipHostCheck,\n  });\n  let totalProgress = 0;\n  let bundlesBuilt = 0;\n\n  for (const bundleName of bundles) {\n    const bundleConfig = projectConfig.bundles[bundleName];\n    if (bundleConfig.external) {\n      const bundleFilename = getBundleFilename(\n        {\n          ...configOptions,\n          platform,\n        },\n        projectConfig.templates,\n        bundleConfig\n      );\n\n      try {\n        fs.copyFileSync(\n          bundleConfig.external.bundlePath,\n          path.join(outputPath, bundleFilename)\n        );\n        runtime.logger.done(\n          `Copied external${\n            bundleConfig.dll ? ' DLL' : ''\n          } bundle \"${bundleName}\"`\n        );\n      } catch (error) {\n        // Log original message\n        runtime.logger.error(error.message);\n        let message = '';\n        try {\n          // If the error was caused due to insufficient permissions,\n          // try to get the permissions bits in octal.\n          let permissions = '';\n          if (error.code === 'EACCES' && error.path) {\n            const stats = fs.statSync(error.path);\n            permissions = '0' + (stats.mode & parseInt('777', 8)).toString(8);\n          }\n\n          message = `Failed to copy${\n            bundleConfig.dll ? ' DLL' : ''\n          } bundle \"${bundleName}\": ${error.code} ${error.path}${\n            permissions ? ` | permissions: ${permissions}` : ''\n          }`;\n        } catch (statError) {\n          // `fs.statSync` will fail only if the one of the parent directories is inaccessible due\n          // to insufficient permissions. If the file does not exists, `fs.statSync` won't be called on it.\n          message =\n            'Failed to stats file for permissions - parent directories can be inaccessible due to insufficient permissions';\n        }\n\n        setTimeout(() => {\n          // Emit event only after the emitter is returned from this function.\n          emitter.emit(Events.BUILD_FAILED, {\n            message,\n          });\n        }, 0);\n        break;\n      }\n\n      try {\n        if (fs.existsSync(`${bundleConfig.external.bundlePath}.map`)) {\n          fs.copyFileSync(\n            `${bundleConfig.external.bundlePath}.map`,\n            path.join(\n              outputPath,\n              `${path.basename(bundleConfig.external.bundlePath)}.map`\n            )\n          );\n          runtime.logger.done(`Copied external source maps for ${bundleName}`);\n        }\n      } catch (error) {\n        const message = `Failed to copy source maps for ${bundleName}`;\n        runtime.logger.error(message, error.message);\n      }\n\n      try {\n        cpx.copySync(\n          path.join(bundleConfig.external.assetsPath, '**'),\n          path.join(outputPath, 'assets'),\n          {\n            preserve: true,\n          }\n        );\n        runtime.logger.done(\n          `Copied assets for external${\n            bundleConfig.dll ? ' DLL' : ''\n          } bundle \"${bundleName}\"`\n        );\n      } catch (error) {\n        const message = `Failed to copy assets for ${bundleName}`;\n        runtime.logger.error(message, error.message);\n      }\n\n      continue;\n    }\n\n    let config = projectConfig.webpackConfigs[bundleName];\n\n    /**\n     * Let's add ProgressPlugin, but let's be sure that we don't mutate the user's config\n     */\n    let lastLocalProgress = 0;\n    config = {\n      ...config,\n      plugins: [\n        ...config.plugins,\n        new webpack.ProgressPlugin(localProgress => {\n          if (lastLocalProgress !== localProgress) {\n            totalProgress = (bundlesBuilt + localProgress) / bundles.length;\n            if (localProgress === 1) {\n              bundlesBuilt++;\n            }\n            emitter.emit(Events.BUILD_PROGRESS, { progress: totalProgress });\n            lastLocalProgress = localProgress;\n          }\n        }),\n      ],\n    };\n\n    if (projectConfig.bundles[bundleName].dll) {\n      await new Promise((resolve, reject) =>\n        webpack(config).run(err => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        })\n      );\n    } else {\n      apps.push(config);\n    }\n  }\n\n  const compiler = webpack(apps);\n\n  compiler.hooks.done.intercept({\n    call(stats) {\n      emitter.emit(Events.BUILD_FINISHED, {\n        stats,\n      });\n    },\n  });\n\n  compiler.hooks.invalid.intercept({\n    tap() {\n      emitter.emit(Events.BUILD_START);\n    },\n  });\n\n  emitter.on('start', () => {\n    emitter.emit(Events.BUILD_START);\n    compiler.watch({}, error => {\n      if (error) {\n        emitter.emit(Events.BUILD_FAILED, { message: error.toString() });\n      }\n    });\n  });\n\n  return emitter;\n};\n"],"file":"runWebpackCompiler.js"}