{"version":3,"sources":["../../src/messages/bundleMessages.ts"],"names":["initialInformation","runtime","config","logger","info","enhanceWithColor","output","path","filename","resolve","initialBundleInformation","entry","dev","mode","enhanceWithModifier","buildFailed","error","getBuildTime","stats","jsonStats","toJson","timings","time","Math","max","children","map","bundleBuilt","args","warnings","hasWarnings","warn","toFixed","join","done","assetsPath","bundlePath","device","platform"],"mappings":";;;;;;;;;;AAAA;;AAEA;;;;AAEO,SAASA,kBAAT,CACLC,OADK,EAEL;AAAEC,EAAAA;AAAF,CAFK,EAGL;AACAD,EAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CACG,uBAAsBH,OAAO,CAACE,MAAR,CAAeE,gBAAf,CACrB,MADqB,EAErBH,MAAM,CAACI,MAAP,CAAeC,IAFM,CAGrB,EAJJ;AAMAN,EAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CACG,kBAAiBH,OAAO,CAACE,MAAR,CAAeE,gBAAf,CAChB,MADgB,EAEhBH,MAAM,CAACI,MAAP,CAAeE,QAFC,CAGhB,EAJJ;AAMAP,EAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CACG,6BAA4BH,OAAO,CAACE,MAAR,CAAeE,gBAAf,CAC3B,MAD2B,EAE3BE,cAAKE,OAAL,CAAaP,MAAM,CAACI,MAAP,CAAeE,QAA5B,CAF2B,CAG3B,EAJJ;AAMD;;AAEM,SAASE,wBAAT,CACLT,OADK,EAEL;AAAEU,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAFK,EAGL;AACA,QAAMC,IAAI,GAAGD,GAAG,GAAG,aAAH,GAAmB,YAAnC;AACAX,EAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CACG,iDAAgDH,OAAO,CAACE,MAAR,CAAeW,mBAAf,CAC/C,MAD+C,EAE/CD,IAF+C,CAG/C,OAJJ;AAMAZ,EAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CACG,mBAAkBH,OAAO,CAACE,MAAR,CAAeE,gBAAf,CACjB,MADiB,EAEjB,sBAAWM,KAAX,CAFiB,CAGjB,EAJJ;AAMD;;AAEM,SAASI,WAAT,CAAqBd,OAArB,EAAuC;AAC5CA,EAAAA,OAAO,CAACE,MAAR,CAAea,KAAf,CAAqB,oBAArB;AACD;;AAED,SAASC,YAAT,CAAsBC,KAAtB,EAA4C;AAC1C,QAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAb,CAAlB;AACA,SAAOF,SAAS,CAACG,IAAV,GACHH,SAAS,CAACG,IADP,GAEHC,IAAI,CAACC,GAAL,CAAS,GAAGL,SAAS,CAACM,QAAV,CAAoBC,GAApB,CAAwB,CAAC;AAAEJ,IAAAA;AAAF,GAAD,KAAmBA,IAA3C,CAAZ,CAFJ;AAGD;;AAEM,SAASK,WAAT,CACL1B,OADK,EAEL2B,IAFK,EAQL;AACA,QAAMC,QAAQ,GAAGD,IAAI,CAACV,KAAL,CAAWE,MAAX,CAAkB;AAAES,IAAAA,QAAQ,EAAE;AAAZ,GAAlB,EAAsCA,QAAvD;;AACA,MAAID,IAAI,CAACV,KAAL,CAAWY,WAAX,EAAJ,EAA8B;AAC5B7B,IAAAA,OAAO,CAACE,MAAR,CAAe4B,IAAf,CACG,0BAAyB,CAACd,YAAY,CAACW,IAAI,CAACV,KAAN,CAAZ,GAA2B,IAA5B,EAAkCc,OAAlC,CAA0C,CAA1C,CAA6C,IADzE;AAGA/B,IAAAA,OAAO,CAACE,MAAR,CAAe4B,IAAf,CAAoBF,QAAQ,CAACI,IAAT,CAAc,IAAd,CAApB;AACD,GALD,MAKO;AACLhC,IAAAA,OAAO,CAACE,MAAR,CAAe+B,IAAf,CACG,yBAAwB,CAACjB,YAAY,CAACW,IAAI,CAACV,KAAN,CAAZ,GAA2B,IAA5B,EAAkCc,OAAlC,CAA0C,CAA1C,CAA6C,IADxE;AAGD;;AAED,MAAIJ,IAAI,CAACO,UAAL,IAAmBP,IAAI,CAACQ,UAA5B,EAAwC;AACtCnC,IAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CACG,oBAAmBH,OAAO,CAACE,MAAR,CAAeE,gBAAf,CAClB,MADkB,EAElBuB,IAAI,CAACO,UAFa,CAGlB,EAJJ;AAMAlC,IAAAA,OAAO,CAACE,MAAR,CAAeC,IAAf,CACG,oBAAmBH,OAAO,CAACE,MAAR,CAAeE,gBAAf,CAClB,MADkB,EAElBE,cAAK0B,IAAL,CAAUL,IAAI,CAACO,UAAf,EAA2BP,IAAI,CAACQ,UAAhC,CAFkB,CAGlB,EAJJ;AAMD;;AAED,QAAMC,MAAM,GACVT,IAAI,CAACU,QAAL,KAAkB,KAAlB,GAA0B,aAA1B,GAA2C,QAAOV,IAAI,CAACU,QAAS,SADlE;AAEArC,EAAAA,OAAO,CAACE,MAAR,CAAe+B,IAAf,CAAqB,8BAA6BG,MAAO,EAAzD;AACD","sourcesContent":["import { Runtime, parseEntry } from '@haul-bundler/core';\nimport webpack from 'webpack';\nimport path from 'path';\n\nexport function initialInformation(\n  runtime: Runtime,\n  { config }: { config: webpack.Configuration }\n) {\n  runtime.logger.info(\n    `Assets Destination: ${runtime.logger.enhanceWithColor(\n      'gray',\n      config.output!.path\n    )}`\n  );\n  runtime.logger.info(\n    `Bundle output: ${runtime.logger.enhanceWithColor(\n      'gray',\n      config.output!.filename\n    )}`\n  );\n  runtime.logger.info(\n    `Bundle output (resolved): ${runtime.logger.enhanceWithColor(\n      'gray',\n      path.resolve(config.output!.filename! as string)\n    )}`\n  );\n}\n\nexport function initialBundleInformation(\n  runtime: Runtime,\n  { entry, dev }: { entry: webpack.Configuration['entry']; dev: boolean }\n) {\n  const mode = dev ? 'development' : 'production';\n  runtime.logger.info(\n    `Haul is now bundling your React Native app in ${runtime.logger.enhanceWithModifier(\n      'bold',\n      mode\n    )} mode`\n  );\n  runtime.logger.info(\n    `Starting from:\\n${runtime.logger.enhanceWithColor(\n      'gray',\n      parseEntry(entry)\n    )}`\n  );\n}\n\nexport function buildFailed(runtime: Runtime) {\n  runtime.logger.error('Failed to compile.');\n}\n\nfunction getBuildTime(stats: webpack.Stats) {\n  const jsonStats = stats.toJson({ timings: true });\n  return jsonStats.time\n    ? jsonStats.time\n    : Math.max(...jsonStats.children!.map(({ time }: any) => time));\n}\n\nexport function bundleBuilt(\n  runtime: Runtime,\n  args: {\n    stats: webpack.Stats;\n    platform: string;\n    assetsPath?: string;\n    bundlePath?: string;\n  }\n) {\n  const warnings = args.stats.toJson({ warnings: true }).warnings;\n  if (args.stats.hasWarnings()) {\n    runtime.logger.warn(\n      `Built with warnings in ${(getBuildTime(args.stats) / 1000).toFixed(2)}s!`\n    );\n    runtime.logger.warn(warnings.join('\\n'));\n  } else {\n    runtime.logger.done(\n      `Built successfully in ${(getBuildTime(args.stats) / 1000).toFixed(2)}s!`\n    );\n  }\n\n  if (args.assetsPath && args.bundlePath) {\n    runtime.logger.info(\n      `Assets location: ${runtime.logger.enhanceWithColor(\n        'gray',\n        args.assetsPath\n      )}`\n    );\n    runtime.logger.info(\n      `Bundle location: ${runtime.logger.enhanceWithColor(\n        'gray',\n        path.join(args.assetsPath, args.bundlePath)\n      )}`\n    );\n  }\n\n  const device =\n    args.platform === 'all' ? 'your device' : `your ${args.platform} device`;\n  runtime.logger.done(`You can now run the app on ${device}`);\n}\n"],"file":"bundleMessages.js"}