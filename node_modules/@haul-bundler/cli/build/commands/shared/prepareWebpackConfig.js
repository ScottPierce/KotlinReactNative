"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = prepareWebpackConfig;

var _core = require("@haul-bundler/core");

var _simpleProgressWebpackPlugin = _interopRequireDefault(require("simple-progress-webpack-plugin"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function prepareWebpackConfig(runtime, options) {
  const directory = process.cwd();
  const configPath = (0, _core.getProjectConfigPath)(directory, options.config);
  const normalizedProjectConfigBuilder = (0, _core.getNormalizedProjectConfigBuilder)(runtime, configPath);
  const projectConfig = normalizedProjectConfigBuilder(runtime, {
    platform: options.platform,
    root: directory,
    dev: options.dev,
    bundleType: options.bundleType,
    bundleMode: options.bundleMode,
    bundleTarget: 'file',
    assetsDest: options.assetsDest,
    bundleOutput: options.bundleOutput,
    sourcemapOutput: options.sourcemapOutput,
    minify: options.minify === undefined ? !options.dev : options.minify,
    maxWorkers: options.maxWorkers
  });
  const webpackConfig = projectConfig.webpackConfigs.index || projectConfig.webpackConfigs.main;

  if (!webpackConfig) {
    throw new Error('Cannot find webpack config `index` nor `main`. Make sure you have bundle config for `index` or `main');
  } // Attach progress plugin


  if (options.progress !== 'none') {
    webpackConfig.plugins.push(new _simpleProgressWebpackPlugin.default({
      format: options.progress
    }));
  }

  return webpackConfig;
}
//# sourceMappingURL=prepareWebpackConfig.js.map