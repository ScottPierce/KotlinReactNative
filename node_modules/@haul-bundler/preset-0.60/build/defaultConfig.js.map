{"version":3,"sources":["../src/defaultConfig.ts"],"names":["getDefaultConfig","runtime","env","bundleName","projectConfig","entry","entryFiles","platform","root","assetsDest","dev","minify","providesModuleNodeModules","hasteOptions","maxWorkers","type","bundles","host","port","server","mode","context","devtool","output","path","publicPath","globalObject","module","rules","parser","requireEnsure","test","exclude","use","loader","require","resolve","options","extends","plugins","cacheDirectory","join","AssetResolver","ASSET_LOADER_PATH","bundle","bundleTarget","CaseSensitivePathsPlugin","webpack","DefinePlugin","NODE_ENV","__DEV__","LoaderOptionsPlugin","minimize","debug","optimize","LimitChunkCountPlugin","maxChunks","HasteResolver","directories","map","_","name","directory","mainFields","aliasFields","extensions","optimization","minimizer","TerserWebpackPlugin","cache","parallel","isCi","Math","min","os","cpus","length","sourceMap","namedModules","concatenateModules","target","stats"],"mappings":"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","sourcesContent":["import {\n  AssetResolver,\n  HasteResolver,\n  getBabelConfigPath,\n  resolveModule,\n  ASSET_LOADER_PATH,\n  Runtime,\n  EnvOptions,\n  NormalizedProjectConfig,\n} from '@haul-bundler/core';\nimport path from 'path';\nimport os from 'os';\nimport isCi from 'is-ci';\nimport webpack from 'webpack';\nimport CaseSensitivePathsPlugin from 'case-sensitive-paths-webpack-plugin';\nimport TerserWebpackPlugin from 'terser-webpack-plugin';\n\nexport default function getDefaultConfig(\n  runtime: Runtime,\n  env: EnvOptions,\n  bundleName: string,\n  projectConfig: NormalizedProjectConfig\n): webpack.Configuration {\n  const {\n    entry: { entryFiles },\n    platform,\n    root,\n    assetsDest,\n    dev,\n    minify,\n    providesModuleNodeModules,\n    hasteOptions,\n    maxWorkers,\n    type,\n  } = projectConfig.bundles[bundleName];\n  const { host, port } = projectConfig.server;\n\n  return {\n    mode: dev ? 'development' : 'production',\n    context: root,\n    devtool: false,\n    entry: entryFiles,\n    output: {\n      path: assetsDest || root,\n      publicPath: `http://${host}:${port}/`,\n      globalObject: 'this',\n    },\n    module: {\n      rules: [\n        { parser: { requireEnsure: false } },\n        {\n          test: /\\.[jt]sx?$/,\n          // eslint-disable-next-line no-useless-escape\n          exclude: /node_modules(?!.*[\\/\\\\](react|@react-navigation|@react-native-community|@expo|pretty-format|@haul-bundler|metro))/,\n          use: [\n            {\n              loader: require.resolve(\n                '@haul-bundler/core/build/webpack/loaders/babelWorkerLoader'\n              ),\n              options: {\n                maxWorkers,\n                extends: getBabelConfigPath(root),\n                plugins: [\n                  require.resolve(\n                    '@haul-bundler/core/build/utils/fixRequireIssues'\n                  ),\n                ],\n                /**\n                 * to improve the rebuild speeds\n                 * This enables caching results in ./node_modules/.cache/babel-loader/<platform>\n                 * This is a feature of `babel-loader` and not babel\n                 */\n                cacheDirectory: dev\n                  ? path.join(\n                      root,\n                      'node_modules',\n                      '.cache',\n                      'babel-loader',\n                      platform\n                    )\n                  : false,\n              },\n            },\n          ],\n        },\n        {\n          test: AssetResolver.test,\n          use: {\n            /**\n             * Asset loader enables asset management based on image scale\n             * This needs the AssetResolver plugin in resolver.plugins to work\n             */\n            loader: ASSET_LOADER_PATH,\n            options: {\n              runtime,\n              platform,\n              root,\n              bundle: env.bundleTarget === 'file',\n            },\n          },\n        },\n      ],\n    },\n    plugins: [\n      /**\n       * MacOS has a case insensitive filesystem\n       * This is needed so we can error on incorrect case\n       */\n      (new CaseSensitivePathsPlugin() as any) as webpack.Plugin,\n      new webpack.DefinePlugin({\n        /**\n         * Various libraries like React rely on `process.env.NODE_ENV`\n         * to distinguish between production and development\n         */\n        'process.env': {\n          NODE_ENV: dev ? '\"development\"' : '\"production\"',\n        },\n        __DEV__: dev,\n      }),\n      new webpack.LoaderOptionsPlugin({\n        minimize: !!minify,\n        debug: dev,\n      }),\n      /**\n       * All chunks will be combined into a single bundle anyway - so\n       * combine all chunks into one to avoid creating other issues e.g.\n       * https://github.com/callstack/haul/issues/701. They might otherwise\n       * be created e.g. by calls to `import()`.\n       */\n      new webpack.optimize.LimitChunkCountPlugin({\n        maxChunks: 1,\n      }),\n    ],\n    resolve: {\n      plugins: [\n        /**\n         * React Native uses a module system called Haste\n         * React Native uses haste internally, and additional RN\n         * platform's require additional packages also provide haste modules\n         */\n        new HasteResolver({\n          directories: providesModuleNodeModules.map((_: any) => {\n            if (typeof _ === 'string') {\n              if (_ === 'react-native') {\n                return path.join(\n                  resolveModule(root, 'react-native'),\n                  'Libraries'\n                );\n              }\n              return resolveModule(root, _);\n            }\n            return path.join(resolveModule(root, _.name), _.directory);\n          }),\n          hasteOptions: hasteOptions || {},\n        }),\n        /**\n         * This is required by asset loader to resolve extra scales\n         * It will resolve assets like image@1x.png when image.png is not present\n         */\n        new AssetResolver({ platform, runtime }),\n      ],\n      /**\n       * Match what React Native packager supports.\n       * First entry takes precedence.\n       */\n      mainFields: ['react-native', 'browser', 'main'],\n      aliasFields: ['react-native', 'browser', 'main'],\n      extensions: [\n        `.${platform}.js`,\n        `.${platform}.jsx`,\n        '.native.js',\n        '.native.jsx',\n        '.js',\n        '.jsx',\n        `.${platform}.ts`,\n        `.${platform}.tsx`,\n        '.native.ts',\n        '.native.tsx',\n        '.ts',\n        '.tsx',\n      ],\n    },\n    optimization: {\n      minimize: type === 'basic-bundle' ? !!minify : false,\n      minimizer:\n        type === 'basic-bundle'\n          ? [\n              new TerserWebpackPlugin({\n                test: /\\.(js|(js)?bundle)($|\\?)/i,\n                cache: true,\n                // Set upper limit on CPU cores, to prevent Out of Memory exception on CIs.\n                parallel: isCi ? Math.min(os.cpus().length, 8) - 1 : true,\n                sourceMap: true,\n              }),\n            ]\n          : [],\n      namedModules: dev,\n      concatenateModules: true,\n    },\n    // Webworker environment is the closes to RN's except for `importScripts`. Further customization\n    // of the generated bundle can be done in `basic-bundle` or `ram-bundle` Webpack plugin.\n    target: 'webworker',\n    stats: 'verbose',\n  };\n}\n"],"file":"defaultConfig.js"}